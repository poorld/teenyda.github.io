<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>teenyda</title>
  
  <subtitle>落花有意，流水无情！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-10T07:42:52.684Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>teenyda</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue.js小笔记</title>
    <link href="http://yoursite.com/-%20vue.js%E5%B0%8F%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/- vue.js小笔记/</id>
    <published>2018-09-10T07:42:41.321Z</published>
    <updated>2018-09-10T07:42:52.684Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>事件对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;button @click=&quot;eventFn($event)&quot;&gt;事件对象&lt;/button&gt;</div><div class="line">eventFn(e)&#123;</div><div class="line">    //打印dom节点</div><div class="line">    console.log(e);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>获取自定义属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;button data-aid=&apos;123&apos; @click=&quot;getAidAttr($event)&quot;&gt;获取自定义属性的值&lt;/button&gt;</div><div class="line">getAidAttr(e)&#123;</div><div class="line">    console.log(e.srcElement.dataset.aid)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>模块化<br>新建.js文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">var storage = &#123;</div><div class="line">    set(key,value)&#123;</div><div class="line">        localStorage.setItem(key,JSON.stringify(value))</div><div class="line">    &#125;,</div><div class="line">    get(key)&#123;</div><div class="line">        return JSON.parse(localStorage.getItem(key)</div><div class="line">    &#125;,</div><div class="line">    remove(key)&#123;</div><div class="line">        locaStorage.removeItem(key)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//把storage暴露出去</div><div class="line">export default storage;</div></pre></td></tr></table></figure></p></blockquote><h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><blockquote><p>父组件给子组件传值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 父组件给子组件传值:</div><div class="line"> * 1.父组件调用子组件时 ，绑定动态属性值</div><div class="line">    &lt;v-header :homeMsg=&quot;msg&quot;&gt;&lt;/v-header&gt;</div><div class="line"> * </div><div class="line"> * 2.在子组件里通过props 接收父组件传过来的数据</div><div class="line">    props: [&apos;homeMsg&apos;],</div><div class="line"> * </div><div class="line"> * 3.也可以传方法:run=&quot;run&quot;</div><div class="line"> * </div><div class="line"> * 4.把整个组件传过去:home=&quot;this&quot;</div><div class="line"> */</div></pre></td></tr></table></figure></p><p>子组件主动获取父组件的数据和方法</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">this.$parent.数据</div><div class="line">this.$parent.方法</div><div class="line">// 如弹出父组件的msg:</div><div class="line">alert(this.$parent.msg)</div><div class="line">// 运行父组件的方法</div><div class="line">this.$parent.homeAlert()</div></pre></td></tr></table></figure><blockquote><p>父组件主动获取子组件的数据和方法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1.调用子组件的时定义一个ref</div><div class="line">&lt;v-header ref=&quot;header&quot;&gt;&lt;/v-header&gt;</div><div class="line">//2.在父组件里面通过</div><div class="line">this.$refs.header.属性</div><div class="line">this.$refs.header.方法</div></pre></td></tr></table></figure></p><p>非父子组件传值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 非父子组件传值</div><div class="line"> * 1.新建js文件 , 然后引入vue 实例化vue 最后暴露这个实例 export default</div><div class="line"> * </div><div class="line"> * 2.在要广播的地方引入刚才定义的实例</div><div class="line"> * </div><div class="line"> * 3.通过VueEmit.$emit(&apos;名称&apos;,&apos;数据&apos;) 广播数据</div><div class="line"> * </div><div class="line"> * 4.在接收数据的地方通过 .$on(&apos;名称&apos;,(data) -&gt; &#123;&#125;)监听数据</div><div class="line"> */</div></pre></td></tr></table></figure></p></blockquote><p>App组件<br>    |-Home组件<br>    |-New组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line">App组件</div><div class="line">&lt;template&gt;</div><div class="line">  &lt;div id=&quot;app&quot;&gt;</div><div class="line">    &lt;v-home&gt;&lt;/v-home&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;/template&gt;</div><div class="line">&lt;script&gt;</div><div class="line">import Home from &apos;./components/Home&apos;</div><div class="line">export default &#123;</div><div class="line">  name: &apos;app&apos;,</div><div class="line">  data () &#123;</div><div class="line">    return &#123;</div><div class="line">      msg: &apos;Welcome to Your Vue.js App&apos;</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  components: &#123;</div><div class="line">    &apos;v-home&apos;: Home</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">Home组件</div><div class="line">&lt;template&gt;</div><div class="line">    &lt;div&gt;</div><div class="line">        &lt;v-header&gt;&lt;/v-header&gt;</div><div class="line">        &lt;v-news&gt;&lt;/v-news&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/template&gt;</div><div class="line">&lt;script&gt;</div><div class="line">import Header from &apos;./Header.vue&apos;</div><div class="line">import News from &apos;./News.vue&apos;</div><div class="line">export default &#123;</div><div class="line">    data()&#123;</div><div class="line">        return &#123;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    components: &#123;</div><div class="line">        &apos;v-header&apos;: Header,</div><div class="line">        &apos;v-news&apos;: News</div><div class="line">    &#125;,</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">Header组件</div><div class="line">&lt;template&gt;</div><div class="line">    &lt;div&gt;</div><div class="line">        &lt;h2&gt;我是头部&lt;/h2&gt;</div><div class="line">        &lt;button @click=&quot;sendBroadcast()&quot;&gt;发送广播&lt;/button&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/template&gt;</div><div class="line">&lt;script&gt;</div><div class="line">import VueEvent from &apos;../model/VueEvent.js&apos;</div><div class="line">export default &#123;</div><div class="line">    data()&#123;</div><div class="line">        return &#123;</div><div class="line">            msg: &quot;我是header组件的msg&quot;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    methods: &#123;</div><div class="line">      sendBroadcast()&#123;</div><div class="line">          VueEvent.$emit(&quot;to-news&quot;,this.msg)</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">News组件</div><div class="line">&lt;template&gt;</div><div class="line">    &lt;div&gt;</div><div class="line">        &lt;h3&gt;我是新闻&lt;/h3&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/template&gt;</div><div class="line">&lt;script&gt;</div><div class="line">import VueEvent from &apos;../model/VueEvent.js&apos;</div><div class="line">export default &#123;</div><div class="line">    data()&#123;</div><div class="line">        return &#123;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    mounted () &#123;</div><div class="line">        VueEvent.$on(&quot;to-news&quot;, (data) =&gt; &#123;</div><div class="line">            console.log(&quot;我是News组件，正在监听广播&quot;)</div><div class="line">            console.log(data)</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">VueEvent.js</div><div class="line">import Vue from &apos;vue&apos;</div><div class="line">var VueEvent = new Vue();</div><div class="line">export default VueEvent;</div></pre></td></tr></table></figure><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">//安装</div><div class="line">npm install vue-router</div><div class="line">//引入 vue-router</div><div class="line">import VueRouter from &apos;vue-router&apos;</div><div class="line">Vue.use(VueRouter)</div><div class="line">//1.创建组件</div><div class="line">import Home from &apos;./components/Home.vue&apos;</div><div class="line">import News from &apos;./components/News.vue&apos;</div><div class="line">//2.配置路由</div><div class="line">const routes = [</div><div class="line">  &#123; path: &apos;/home&apos;,component: Home&#125;,</div><div class="line">  &#123; path: &apos;/news&apos;,component: News&#125;,</div><div class="line">  //重定向(默认首页)</div><div class="line">  &#123; path: &apos;*&apos;, redirect: &apos;/home&apos;&#125; //默认跳转路由</div><div class="line">]</div><div class="line">//3.实例化VueRouter</div><div class="line">const router = new VueRouter(&#123;</div><div class="line">  routes</div><div class="line">&#125;)</div><div class="line">//4.挂载路由</div><div class="line">new Vue(&#123;</div><div class="line">  el: &apos;#app&apos;,</div><div class="line">  render: h =&gt; h(App),</div><div class="line">  router</div><div class="line">&#125;)</div><div class="line"></div><div class="line">//5. &lt;router-view&gt;&lt;/router-view&gt; 放在App.vue</div><div class="line">&lt;template&gt;</div><div class="line">  &lt;div id=&quot;app&quot;&gt;</div><div class="line"></div><div class="line">    &lt;router-link to=&quot;/home&quot;&gt;home&lt;/router-link&gt;</div><div class="line">    &lt;router-link to=&quot;/news&quot;&gt;news&lt;/router-link&gt;</div><div class="line"></div><div class="line">    &lt;router-view&gt;&lt;/router-view&gt;</div><div class="line">    </div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;/template&gt;</div></pre></td></tr></table></figure><blockquote><p>获取动态路由的值</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">1.this.$router.params 获取动态路由的值</div><div class="line"></div><div class="line">//获取问号后面的参数:</div><div class="line">//this.$route.query</div><div class="line">&lt;router-link to=&quot;/product?pid=123&quot;&gt;产品1&lt;/router-link&gt;</div><div class="line"></div><div class="line">//获取路径参数，要配置动态路由</div><div class="line">&#123; path: &apos;/news/:nid&apos;, component: News &#125;,</div><div class="line"></div><div class="line">//获取路径参数</div><div class="line">//this.$route.params</div><div class="line">&lt;router-link to=&quot;/news/222&quot;&gt;news&lt;/router-link&gt;</div></pre></td></tr></table></figure><blockquote><p>编程式导航</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;button @click=&quot;goNews()&quot;&gt;通过js转跳到news&lt;/button&gt;</div><div class="line"></div><div class="line">goNews()&#123;</div><div class="line">    this.$router.push(&#123;path: &apos;/news&apos;&#125;)    </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;事件对象&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div
      
    
    </summary>
    
      <category term="vue.js" scheme="http://yoursite.com/categories/vue-js/"/>
    
    
      <category term="vue.js" scheme="http://yoursite.com/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu16搭建java+mysql+tomcat环境</title>
    <link href="http://yoursite.com/-%20ubuntu16%E6%90%AD%E5%BB%BAjava+mysql+tomcat%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/- ubuntu16搭建java+mysql+tomcat环境/</id>
    <published>2018-08-23T02:45:36.008Z</published>
    <updated>2018-08-23T02:45:44.484Z</updated>
    
    <content type="html"><![CDATA[<p>###1.先安装mysql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install mysql-server</div><div class="line"></div><div class="line">sudo apt-get install mysql-client</div><div class="line"></div><div class="line">sudo apt-get install libmysqlclient-dev</div></pre></td></tr></table></figure></p><p>查看是否安装成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo netstat -tap | grep mysql</div></pre></td></tr></table></figure></p><p>###2.安装java<br>进入<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">oracle</a>下载java,我使用的是jdk-8u161-linux-x64</p><p>上传到服务器</p><p>或者使用wget下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://download.oracle.com/otn-pub/java/jdk/8u181-b13/96a7b8442fe848ef90c96a2fad6ed6d1/jdk-8u181-linux-x64.tar.gz?AuthParam=1534991160_9a55c811f03edc31425ef0e48e6b0007</div></pre></td></tr></table></figure></p><p>由于多了个后缀，这里重命名一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@teenyda:~# cp jdk-8u181-linux-x64.tar.gz?AuthParam=1534991160_9a55c811f03edc31425ef0e48e6b0007 jdk-8u181-linux-x64.tar.gz</div><div class="line">root@teenyda:~# ls</div><div class="line">jdk-8u181-linux-x64.tar.gz  jdk-8u181-linux-x64.tar.gz?AuthParam=1534991160_9a55c811f03edc31425ef0e48e6b0007</div></pre></td></tr></table></figure></p><p>解压，我放在/opt/jvm/目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tar -zxvf jdk-8u65-linux-x64.tar.gz</div></pre></td></tr></table></figure></p><p>解压到指定目录可以用:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tar -zxvf jdk-8u65-linux-x64.tar.gz -C /opt/jvm/</div></pre></td></tr></table></figure></p><p>添加环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/profile</div><div class="line">export JAVA_HOME=/opt/jvm/jdk1.8.0_65               </div><div class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</div><div class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH</div><div class="line">export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</div></pre></td></tr></table></figure></p><p>让配置生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure></p><p>查看java版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -version</div></pre></td></tr></table></figure></p><p>下载<a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="external">tomcat8.0</a></p><p>上传到服务器，解压</p><p>或者wget下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.33/bin/apache-tomcat-8.5.33.tar.gz</div></pre></td></tr></table></figure></p><p>我放在/opt/目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar zxvf apache-tomcat-8.5.33.tar.gz -C /opt</div></pre></td></tr></table></figure></p><p>进入/opt/tomcat/bin<br>使用命令启动tomcat<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ./startup.sh</div></pre></td></tr></table></figure></p><p>如果启动时出错:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-97-175-ubuntu:/usr/tomcat/apache-tomcat-8.5.27/bin$ sudo ./startup.sh</div><div class="line">Neither the JAVA_HOME nor the JRE_HOME environment variable is defined</div><div class="line">At least one of these environment variable is needed to run this program</div></pre></td></tr></table></figure></p><p>进入tomcat的bin目录,编辑catalina.sh文件,在正文开头前，加上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/opt/jvm/jdk1.8.0_65</div><div class="line">export JRE_HOME=/opt/jvm/jdk1.8.0_65/jre</div></pre></td></tr></table></figure></p><p>这里要与你的java所在目录对应</p><p>修改端口可以编辑/tomcat/conf/server.xml</p><p>打开浏览器输入ip地址，默认8080端口:<br><img src="http://pdv8bh429.bkt.clouddn.com/tomcat.png" alt="tomcat"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###1.先安装mysql&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;di
      
    
    </summary>
    
      <category term="ubuntu" scheme="http://yoursite.com/categories/ubuntu/"/>
    
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
      <category term="tomcat" scheme="http://yoursite.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>使用git提交代码到github</title>
    <link href="http://yoursite.com/-%20%E4%BD%BF%E7%94%A8git%E6%8F%90%E4%BA%A4%E5%88%B0github/"/>
    <id>http://yoursite.com/- 使用git提交到github/</id>
    <published>2018-08-23T02:14:25.790Z</published>
    <updated>2018-08-23T02:14:47.145Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在window上安装git，到<a href="https://git-scm.com/downloads" target="_blank" rel="external">Git for Windows</a>下载，一路确认安装完毕</p><p>在ubuntu上安装git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure></p><p>配置用户名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-97-175-ubuntu:~$ git config --global user.name &apos;teenyda&apos;</div></pre></td></tr></table></figure></p><p>配置邮箱<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-97-175-ubuntu:~$ git config --global user.email &apos;teenyda@gmail.com&apos;</div></pre></td></tr></table></figure></p><p>生成ssh公钥认证所需的公钥和私钥文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -C &apos;teenyda@gmail.com&apos; -t rsa</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/git-7.PNG" alt=""></p><p>进入生成的目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd /home/ubuntu/.ssh</div><div class="line">vi id_rsa.pub</div><div class="line">:set nonu</div></pre></td></tr></table></figure></p><p>复制代码到github<br><img src="http://oyy9gorf8.bkt.clouddn.com/git-8.PNG" alt=""></p><p>上传代码就上面的 初始化本地仓库 步骤一样了<br>遇到以下问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-97-175-ubuntu:~/git/eParking-javaWeb$ git pull origin master</div><div class="line">Warning: Permanently added the RSA host key for IP address &apos;13.250.177.223&apos; to the list of known hosts.</div><div class="line">fatal: Couldn&apos;t find remote ref master</div><div class="line">ubuntu@VM-97-175-ubuntu:~/git/eParking-javaWeb$ sudi vi /etc/hosts</div></pre></td></tr></table></figure></p><p>解决办法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/hosts</div></pre></td></tr></table></figure></p><p>在最后添加一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">13.250.177.223　　github.com</div></pre></td></tr></table></figure></p><h1 id="把代码上传到githtb"><a href="#把代码上传到githtb" class="headerlink" title="把代码上传到githtb"></a>把代码上传到githtb</h1><p>第一步，先在github上新建一个仓库<br><img src="http://oyy9gorf8.bkt.clouddn.com/git-1.PNG" alt=""></p><p>第二步，仓库名<br><img src="http://oyy9gorf8.bkt.clouddn.com/git-2.PNG" alt=""></p><p>创建后的仓库：<br><img src="http://oyy9gorf8.bkt.clouddn.com/git-3.PNG" alt=""></p><p>在磁盘中新建一个文件夹，把要上传的代码全部放到此文件夹中<br><img src="http://oyy9gorf8.bkt.clouddn.com/git-5.PNG" alt=""></p><p>打开Git Bash,进入到新建的文件夹<br><img src="http://oyy9gorf8.bkt.clouddn.com/git-6.PNG" alt=""></p><p>初始化本地仓库<br>…….<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git init</div><div class="line">git remote add origin git@github.com:teenyda/weParking-javaWeb.git</div><div class="line">git add .</div><div class="line">git commit -m &apos;first commit&apos;</div><div class="line">git push origin master</div><div class="line">git status</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;p&gt;在window上安装git，到&lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>vue.js axios post发送数据后端接收不到数据</title>
    <link href="http://yoursite.com/-%20vue.js%20axios%E4%B9%8Bpost%E6%8F%90%E4%BA%A4%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/- vue.js axios之post提交数据/</id>
    <published>2018-08-22T12:57:14.241Z</published>
    <updated>2018-08-22T12:57:22.232Z</updated>
    
    <content type="html"><![CDATA[<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一:"></a>方法一:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var params = new URLSearchParams();</div><div class="line">params.append(&apos;key1&apos;, &apos;value1&apos;);</div><div class="line">params.append(&apos;key2&apos;, &apos;value2&apos;);</div><div class="line">params.append(&apos;key3&apos;, &apos;value3&apos;);</div></pre></td></tr></table></figure><p>然后把params传过去，但是兼容性不好</p><h2 id="方法二-使用qs"><a href="#方法二-使用qs" class="headerlink" title="方法二: 使用qs"></a>方法二: 使用qs</h2><p>在main.js引入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import qs from &apos;qs&apos;</div><div class="line">Vue.prototype.$qs = qs</div></pre></td></tr></table></figure></p><p>在组件中使用:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//create为对象</div><div class="line">let postData = this.$qs.stringify(this.create)</div><div class="line"></div><div class="line">//或者</div><div class="line">let postData = this.$qs.stringify(&#123;</div><div class="line">    key1: value1,</div><div class="line">    key2: value2,</div><div class="line">    key3: value3</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p>然后把postData传过去</p><p>测试使用JSON.stringify()不行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一:&quot;&gt;&lt;/a&gt;方法一:&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="vue.js" scheme="http://yoursite.com/categories/vue-js/"/>
    
      <category term="axios" scheme="http://yoursite.com/categories/vue-js/axios/"/>
    
    
      <category term="vue.js" scheme="http://yoursite.com/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>javaWeb跨域问题</title>
    <link href="http://yoursite.com/-%20javaWeb%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/- javaWeb跨域问题/</id>
    <published>2018-08-11T14:27:50.922Z</published>
    <updated>2018-08-11T14:28:13.126Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>vue请求错误:<br>Response to preflight request doesn’t pass access control check: No ‘Access-Control-Allow-Origin’ header is present on the requested resource. Origin ‘<a href="http://localhost:9000" target="_blank" rel="external">http://localhost:9000</a>‘ is therefore not allowed access. The response had HTTP status code 403</p></blockquote><h1 id="解决-使用CORS实现跨域请求"><a href="#解决-使用CORS实现跨域请求" class="headerlink" title="解决:使用CORS实现跨域请求"></a>解决:使用CORS实现跨域请求</h1><h2 id="Servlet配置"><a href="#Servlet配置" class="headerlink" title="Servlet配置:"></a>Servlet配置:</h2><p>1.新建CORSFilter类，并实现Filter接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">package com.teenyda.controller;</div><div class="line"></div><div class="line">import java.io.IOException;</div><div class="line"></div><div class="line">import javax.servlet.Filter;</div><div class="line">import javax.servlet.FilterChain;</div><div class="line">import javax.servlet.FilterConfig;</div><div class="line">import javax.servlet.ServletException;</div><div class="line">import javax.servlet.ServletRequest;</div><div class="line">import javax.servlet.ServletResponse;</div><div class="line">import javax.servlet.http.HttpServletRequest;</div><div class="line">import javax.servlet.http.HttpServletResponse;</div><div class="line"></div><div class="line">public class CORSFilter implements Filter&#123;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void destroy() &#123;&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)</div><div class="line">throws IOException, ServletException &#123;</div><div class="line">HttpServletResponse response = (HttpServletResponse) servletResponse;</div><div class="line">HttpServletRequest request = (HttpServletRequest) servletRequest;</div><div class="line">// 指定允许其他域名访问</div><div class="line">response.setHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);</div><div class="line">// 响应类型</div><div class="line">response.setHeader(&quot;Access-Control-Allow-Methods&quot;, &quot;POST, GET, DELETE, OPTIONS, DELETE&quot;);</div><div class="line">// 响应头设置</div><div class="line">response.setHeader(&quot;Access-Control-Allow-Headers&quot;, &quot;Content-Type, x-requested-with, X-Custom-Header, HaiYi-Access-Token&quot;);</div><div class="line">if (&quot;OPTIONS&quot;.equals(request.getMethod()))&#123;</div><div class="line">response.setStatus(200);</div><div class="line">&#125;</div><div class="line">chain.doFilter(servletRequest, servletResponse);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void init(FilterConfig arg0) throws ServletException &#123;&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>2.web.xml配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;filter&gt;</div><div class="line">&lt;filter-name&gt;CORSFilter&lt;/filter-name&gt;</div><div class="line">&lt;filter-class&gt;com.teenyda.controller.CORSFilter&lt;/filter-class&gt;</div><div class="line">&lt;/filter&gt;</div><div class="line"></div><div class="line">&lt;filter-mapping&gt;</div><div class="line">&lt;filter-name&gt;CORSFilter&lt;/filter-name&gt;</div><div class="line">&lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class="line">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure></p><h2 id="SpringMVC配置"><a href="#SpringMVC配置" class="headerlink" title="SpringMVC配置:"></a>SpringMVC配置:</h2><p>新建ProcessInterceptor类，并实现HandlerInterceptor接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">package com.teenyda.controller;</div><div class="line"></div><div class="line">import javax.servlet.http.HttpServletRequest;</div><div class="line">import javax.servlet.http.HttpServletResponse;</div><div class="line"></div><div class="line">import org.springframework.web.servlet.HandlerInterceptor;</div><div class="line">import org.springframework.web.servlet.ModelAndView;</div><div class="line"></div><div class="line">public class ProcessInterceptor implements HandlerInterceptor&#123;</div><div class="line"></div><div class="line">@Override</div><div class="line">public boolean preHandle(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object obj) throws Exception &#123;</div><div class="line">httpServletResponse.setHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);</div><div class="line">httpServletResponse.setHeader(&quot;Access-Control-Allow-Headers&quot;, &quot;Content-Type,Content-Length, Authorization, Accept,X-Requested-With&quot;);</div><div class="line">    httpServletResponse.setHeader(&quot;Access-Control-Allow-Methods&quot;,&quot;PUT,POST,GET,DELETE,OPTIONS&quot;);</div><div class="line">    httpServletResponse.setHeader(&quot;X-Powered-By&quot;,&quot;Jetty&quot;);</div><div class="line">    String method = httpServletRequest.getMethod();</div><div class="line">    if (method.equals(&quot;OPTIONS&quot;))&#123;</div><div class="line">    httpServletResponse.setStatus(200);</div><div class="line">    return false;</div><div class="line">    &#125;</div><div class="line">    System.out.println(method);</div><div class="line">return true;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void afterCompletion(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, Exception arg3)</div><div class="line">throws Exception &#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void postHandle(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, ModelAndView arg3)</div><div class="line">throws Exception &#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>配置spring:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;mvc:interceptors&gt;</div><div class="line">&lt;bean class=&quot;com.teenyda.controller.ProcessInterceptor&quot;&gt;&lt;/bean&gt;</div><div class="line">&lt;/mvc:interceptors&gt;</div><div class="line"></div><div class="line">&lt;bean class=&quot;org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter&quot;/&gt;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;vue请求错误:&lt;br&gt;Response to preflight request doesn’t pass access control check: No ‘Access-Control-Allow-Origin’ header is pres
      
    
    </summary>
    
      <category term="javaWeb" scheme="http://yoursite.com/categories/javaWeb/"/>
    
      <category term="跨域" scheme="http://yoursite.com/categories/javaWeb/%E8%B7%A8%E5%9F%9F/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>android对话框</title>
    <link href="http://yoursite.com/-%20android-dialog/"/>
    <id>http://yoursite.com/- android-dialog/</id>
    <published>2018-07-29T07:40:51.323Z</published>
    <updated>2018-07-29T07:41:04.020Z</updated>
    
    <content type="html"><![CDATA[<p>演示：<br><img src="http://oyy9gorf8.bkt.clouddn.com/ezgif.com-video-to-gif%20%283%29.gif" alt=""></p><p>显示一个简单的对话框:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">builder = new AlertDialog.Builder(this);</div><div class="line">builder.setIcon(R.drawable.icon);</div><div class="line">builder.setTitle(&quot;提示&quot;);</div><div class="line">builder.setMessage(&quot;这是一个简单的提示框&quot;);</div><div class="line">builder.setPositiveButton(&quot;确定&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">    @Override</div><div class="line">    public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">        Toast.makeText(getApplicationContext(), R.string.toast_postive, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line">builder.setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">    @Override</div><div class="line">    public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">        Toast.makeText(getApplicationContext(), R.string.toast_negative, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line">//设置对话框可取消</div><div class="line">builder.setCancelable(true);</div><div class="line">AlertDialog dialog = builder.create();</div><div class="line">dialog.show();</div></pre></td></tr></table></figure></p><p>项目地址:<br><a href="https://github.com/teenyda/android_dialog" target="_blank" rel="external">android_dialog_Test</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;演示：&lt;br&gt;&lt;img src=&quot;http://oyy9gorf8.bkt.clouddn.com/ezgif.com-video-to-gif%20%283%29.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;显示一个简单的对话框:&lt;br&gt;&lt;figure class=&quot;high
      
    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
      <category term="android" scheme="http://yoursite.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>C#枚举练习</title>
    <link href="http://yoursite.com/-%20C%20Sharp%E6%9E%9A%E4%B8%BE/"/>
    <id>http://yoursite.com/- C Sharp枚举/</id>
    <published>2018-07-17T14:21:42.640Z</published>
    <updated>2018-07-17T14:21:45.968Z</updated>
    
    <content type="html"><![CDATA[<p>C#枚举练习:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line">using System;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.Linq;</div><div class="line">using System.Text;</div><div class="line">using System.Threading.Tasks;</div><div class="line"></div><div class="line">namespace EnumTest</div><div class="line">&#123;</div><div class="line">    enum Color</div><div class="line">    &#123;</div><div class="line">        red = 1,</div><div class="line">        green = 2,</div><div class="line">        black = 3,</div><div class="line">        white = 4,</div><div class="line">    &#125;</div><div class="line">    class Program</div><div class="line">    &#123;</div><div class="line">        static void Main(string[] args)</div><div class="line">        &#123;</div><div class="line">            getEnumName(typeof(Color), &quot;red&quot;);</div><div class="line">            getEnumValue(typeof(Color), &quot;red&quot;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        /// &lt;summary&gt;</div><div class="line">        /// 传入一个变量获取枚举的名称</div><div class="line">        /// &lt;/summary&gt;</div><div class="line">        static void getEnumName(Type enumType,string name)</div><div class="line">        &#123;</div><div class="line">            </div><div class="line">            if (foreachEnumHasName(enumType,name))</div><div class="line">            &#123;</div><div class="line">                //方法1：变量获取枚举的名称</div><div class="line">                Object obj = Enum.Parse(enumType, name);</div><div class="line">                Console.WriteLine(&quot;枚举名称=&quot; + obj);</div><div class="line">                Console.ReadKey();</div><div class="line">            &#125;</div><div class="line">            else</div><div class="line">            &#123;</div><div class="line">                Console.WriteLine(&quot;字符串&#123;0&#125; 无效&quot;, name);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        /// &lt;summary&gt;</div><div class="line">        /// 传入一个变量获取枚举的值</div><div class="line">        /// &lt;/summary&gt;</div><div class="line">        /// &lt;param name=&quot;enumStr&quot;&gt;&lt;/param&gt;</div><div class="line">        static void getEnumValue(Type enumType,string enumStr) </div><div class="line">        &#123;</div><div class="line"></div><div class="line">            if (foreachEnumHasName(enumType, enumStr)) </div><div class="line">            &#123;</div><div class="line">                Color color = (Color)Enum.Parse(enumType, enumStr);</div><div class="line"></div><div class="line">                //方法1: 获取枚举的值</div><div class="line">                int colorValue1 = (int)color;</div><div class="line">                Console.WriteLine(colorValue1);</div><div class="line">                //方法2：获取枚举的值</div><div class="line">                int colorValue2 = Convert.ToInt32(color);</div><div class="line">                Console.WriteLine(colorValue2);</div><div class="line">                Console.ReadKey();</div><div class="line">            &#125;</div><div class="line">            else</div><div class="line">            &#123;</div><div class="line">                Console.WriteLine(&quot;字符串&#123;0&#125; 无效&quot;, enumStr);</div><div class="line">                Console.ReadKey();</div><div class="line">                return;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        /// &lt;summary&gt;</div><div class="line">        /// 遍历枚举</div><div class="line">        /// &lt;/summary&gt;</div><div class="line">        static bool foreachEnumHasName(Type enumType,string name) </div><div class="line">        &#123;</div><div class="line"></div><div class="line">            foreach (string enumName in Enum.GetNames(enumType))</div><div class="line">            &#123;</div><div class="line">                if (name.Equals(enumName))</div><div class="line">                &#123;</div><div class="line">                    return true;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            return false;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;C#枚举练习:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div clas
      
    
    </summary>
    
      <category term="C#" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="枚举" scheme="http://yoursite.com/tags/%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>mybatis之使用传递多个参数</title>
    <link href="http://yoursite.com/-%20mybatis%E4%B9%8B%E4%BC%A0%E9%80%92%E5%A4%9A%E4%B8%AA%E5%8F%82%E6%95%B0/"/>
    <id>http://yoursite.com/- mybatis之传递多个参数/</id>
    <published>2018-02-28T05:39:05.403Z</published>
    <updated>2018-02-28T05:39:25.356Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">create TABLE user(</div><div class="line">id int not null auto_increment,</div><div class="line">username VARCHAR(20),</div><div class="line">password VARCHAR(20),</div><div class="line">PRIMARY KEY(id)</div><div class="line">)ENGINE=INNODB auto_increment=0 DEFAULT charset=utf8;</div><div class="line"></div><div class="line">insert into user(username,password) values(&apos;teenyda&apos;,&apos;123456&apos;);</div></pre></td></tr></table></figure><p>User类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">package com.teenyda.domain;</div><div class="line"></div><div class="line">public class User &#123;</div><div class="line">private int id;</div><div class="line">private String username;</div><div class="line">private String password;</div><div class="line"></div><div class="line">public int getId() &#123;</div><div class="line">return id;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void setId(int id) &#123;</div><div class="line">this.id = id;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public String getUsername() &#123;</div><div class="line">return username;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void setUsername(String username) &#123;</div><div class="line">this.username = username;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public String getPassword() &#123;</div><div class="line">return password;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void setPassword(String password) &#123;</div><div class="line">this.password = password;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public String toString() &#123;</div><div class="line">return &quot;User [id=&quot; + id + &quot;, username=&quot; + username + &quot;, password=&quot; + password + &quot;]&quot;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>编写UserMapper.xml文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;select id=&quot;selectUserById&quot; parameterType=&quot;int&quot; resultType=&quot;com.teenyda.domain.User&quot;&gt;</div><div class="line">select * from user where id = #&#123;id&#125;</div><div class="line">&lt;/select&gt;</div></pre></td></tr></table></figure></p><p>编写UserMapper类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">public interface UserMapper &#123;</div><div class="line">public User selectUserById(int id);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><blockquote><p>开始测试：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">public class UserTest &#123;</div><div class="line">public SqlSession sqlSession;</div><div class="line"></div><div class="line">@Before</div><div class="line">public void session()&#123;</div><div class="line">sqlSession = MybatisUtil.getSqlSession(true);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Test</div><div class="line">public void test()&#123;</div><div class="line">UserMapper mapper = sqlSession.getMapper(UserMapper.class);</div><div class="line">User user = mapper.selectUserById(1);</div><div class="line">System.out.println(user);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@After</div><div class="line">public void close()&#123;</div><div class="line">sqlSession.close();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p></blockquote><p>结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">User [id=1, username=teenyda, password=123456]</div></pre></td></tr></table></figure></p><p>当我想验证username和password时，假设sql语句要接收两个参数，我们可以尝试一下是否可以传两个参数过去.<br>UserMapper.xml文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;select id=&quot;checkUser&quot; resultType=&quot;com.teenyda.domain.User&quot;&gt;</div><div class="line">select * from user where username = #&#123;username&#125; and password = #&#123;password&#125;</div><div class="line">&lt;/select&gt;</div></pre></td></tr></table></figure></p><p>UserMapper类:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public interface UserMapper &#123;</div><div class="line">public User selectUserById(int id);</div><div class="line"></div><div class="line">public User checkUser(String username,String password);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>测试类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">package com.teenyda.test;</div><div class="line"></div><div class="line">import org.apache.ibatis.session.SqlSession;</div><div class="line">import org.junit.After;</div><div class="line">import org.junit.Before;</div><div class="line">import org.junit.Test;</div><div class="line"></div><div class="line">import com.teenyda.domain.User;</div><div class="line">import com.teenyda.mapping.UserMapper;</div><div class="line">import com.teenyda.util.MybatisUtil;</div><div class="line"></div><div class="line"></div><div class="line">public class UserTest &#123;</div><div class="line">public SqlSession sqlSession;</div><div class="line"></div><div class="line">@Before</div><div class="line">public void session()&#123;</div><div class="line">sqlSession = MybatisUtil.getSqlSession(true);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Test</div><div class="line">public void test()&#123;</div><div class="line">UserMapper mapper = sqlSession.getMapper(UserMapper.class);</div><div class="line">User user = mapper.checkUser(&quot;teenyda&quot;, &quot;123456&quot;);</div><div class="line">System.out.println(user);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@After</div><div class="line">public void close()&#123;</div><div class="line">sqlSession.close();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>结果报错了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">org.apache.ibatis.exceptions.PersistenceException: </div><div class="line">### Error querying database.  Cause: org.apache.ibatis.binding.BindingException: Parameter &apos;username&apos; not found. Available parameters are [0, 1, param1, param2]</div><div class="line">### Cause: org.apache.ibatis.binding.BindingException: Parameter &apos;username&apos; not found. Available parameters are [0, 1, param1, param2]</div><div class="line">at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)</div><div class="line">at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)</div><div class="line">at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)</div><div class="line">at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)</div><div class="line">at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)</div><div class="line">at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)</div><div class="line">at com.sun.proxy.$Proxy6.checkUser(Unknown Source)</div><div class="line">at com.teenyda.test.UserTest.test2(UserTest.java:48)</div><div class="line">...........</div></pre></td></tr></table></figure></p><p>很不凑巧，大失所望，控制台报错：“Parameter ‘id’ not found. Available parameters are [1, 0, param1, param2]”，说绑定异常，参数ID没有找到，有效的参数是[1, 0, param1, param2]。这是什么意思呢？<br>其实MyBatis在处理多个参数的时候，MyBatis会做特殊处理，多个参数会被封装成一个map，map中是这么存值的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">map.put(&quot;param1&quot;,&quot;传入的参数值1&quot;);</div><div class="line">map.put(&quot;param2&quot;,&quot;传入的参数值2&quot;);</div><div class="line">map.put(&quot;param3&quot;,&quot;传入的参数值3&quot;);</div><div class="line">                  .</div><div class="line">                  .</div><div class="line">                  .</div><div class="line">map.put(&quot;paramN&quot;,&quot;传入的参数值N&quot;);</div></pre></td></tr></table></figure></p><p> #{}就是从map中获取指定的key值。</p><p>这时候我们修改一下UserMapper.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;select id=&quot;checkUser&quot; resultType=&quot;com.teenyda.domain.User&quot;&gt;</div><div class="line">select * from user where username = #&#123;param1&#125; and password = #&#123;param2&#125;</div><div class="line">&lt;/select&gt;</div></pre></td></tr></table></figure></p><p>再次查询：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">User [id=1, username=teenyda, password=123456]</div></pre></td></tr></table></figure></p><p>这种写法给人的感觉比较怪怪的，看起来跟我们平时的写法不太一样，按照大家预想where id = #{id} and userName=#{userName} 这种写法方式，是最让人舒服的。为了解决这种方式使用，MyBatis提供了命名参数的方式，在传递参数时，明确指出封装参数时map的key，这样我们在XML中就能使用where id = #{id} and userName=#{userName} 这种写法来传递参数了。</p><p>修改UserMapper类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">public interface UserMapper &#123;</div><div class="line">public User selectUserById(int id);</div><div class="line"></div><div class="line">/*public User checkUser(String username,String password);*/</div><div class="line"></div><div class="line">public User checkUser(@Param(&quot;username&quot;)String username,@Param(&quot;password&quot;)String password);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>UserMapper.xml文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;select id=&quot;checkUser&quot; resultType=&quot;com.teenyda.domain.User&quot;&gt;</div><div class="line">select * from user where username = #&#123;username&#125; and password = #&#123;password&#125;</div><div class="line">&lt;/select&gt;</div></pre></td></tr></table></figure></p><p>这样就可以查询出来了！</p><p>转载自：<a href="http://www.marsitman.com/mybatis/mybatis-deal-param.html" target="_blank" rel="external">http://www.marsitman.com/mybatis/mybatis-deal-param.html</a><br><a href="http://www.marsitman.com/mybatis/mybatis-named-param.html" target="_blank" rel="external">http://www.marsitman.com/mybatis/mybatis-named-param.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
      
    
    </summary>
    
      <category term="mybatis" scheme="http://yoursite.com/categories/mybatis/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="mybatis" scheme="http://yoursite.com/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>mybatis之使用generator.jar 生成代码</title>
    <link href="http://yoursite.com/-%20mybatis-generator/"/>
    <id>http://yoursite.com/- mybatis-generator/</id>
    <published>2018-02-26T11:19:38.813Z</published>
    <updated>2018-02-26T11:19:48.152Z</updated>
    
    <content type="html"><![CDATA[<p>使用到的jar包：<br><a href="http://oyy9gorf8.bkt.clouddn.com/mybatis-generator-core-1.3.2.jar" target="_blank" rel="external">mybatis-generator-core-1.3.2.jar</a><br><a href="http://oyy9gorf8.bkt.clouddn.com/mysql-connector-java-5.1.7-bin.jar" target="_blank" rel="external">mysql-connector-java-5.1.7-bin</a></p><p>在mysql新建一个数据库，名为test<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">create database test;</div></pre></td></tr></table></figure></p><p>创建两个表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">create table user(</div><div class="line">id int primary key auto_increment,</div><div class="line">username varchar(20) not null,</div><div class="line">password varchar(20) not null</div><div class="line">);</div><div class="line"></div><div class="line">create table info(</div><div class="line">name varchar(20),</div><div class="line">address varchar(20),</div><div class="line">phone varchar(11)</div><div class="line">);</div></pre></td></tr></table></figure></p><p>在D盘下新建一个文件夹，名为：<span id="inline-blue">generator</span><br>,并把两个jar包放到目录下，再新建一个名为<span id="inline-blue">src</span>的文件夹.<br>新建一个generator.xml文件，如图所示！<br><img src="http://oyy9gorf8.bkt.clouddn.com/generator_directory.png" alt=""></p><p>编辑generator文件，根据注释修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE generatorConfiguration PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</div><div class="line">&lt;generatorConfiguration&gt;</div><div class="line">    &lt;!-- 数据库驱动包位置 --&gt;</div><div class="line">    &lt;classPathEntry location=&quot;E:\generator\mysql-connector-java-5.1.7-bin.jar&quot; /&gt; </div><div class="line">    &lt;!-- &lt;classPathEntry location=&quot;C:\oracle\product\10.2.0\db_1\jdbc\lib\ojdbc14.jar&quot; /&gt;--&gt;</div><div class="line">    &lt;context id=&quot;DB2Tables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;</div><div class="line">        &lt;commentGenerator&gt;</div><div class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot; /&gt;</div><div class="line">        &lt;/commentGenerator&gt;</div><div class="line">        &lt;!-- 数据库链接URL、用户名、密码 --&gt;</div><div class="line">         &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql://localhost:3306/test&quot; userId=&quot;root&quot; password=&quot;1108&quot;&gt; </div><div class="line">        &lt;!--&lt;jdbcConnection driverClass=&quot;oracle.jdbc.driver.OracleDriver&quot; connectionURL=&quot;jdbc:oracle:thin:@localhost:1521:orcl&quot; userId=&quot;msa&quot; password=&quot;msa&quot;&gt;--&gt;</div><div class="line">        &lt;/jdbcConnection&gt;</div><div class="line">        &lt;javaTypeResolver&gt;</div><div class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot; /&gt;</div><div class="line">        &lt;/javaTypeResolver&gt;</div><div class="line">        &lt;!-- 生成实体类的包名和位置，这里配置将生成的实体类放在me.gacl.domain这个包下 --&gt;</div><div class="line">        &lt;javaModelGenerator targetPackage=&quot;me.teenyda.domain&quot; targetProject=&quot;E:\generator\src&quot;&gt;</div><div class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</div><div class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;</div><div class="line">        &lt;/javaModelGenerator&gt;</div><div class="line">        &lt;!-- 生成的SQL映射文件包名和位置，这里配置将生成的SQL映射文件放在me.gacl.mapping这个包下 --&gt;</div><div class="line">        &lt;sqlMapGenerator targetPackage=&quot;me.teenyda.mapping&quot; targetProject=&quot;E:\generator\src&quot;&gt;</div><div class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</div><div class="line">        &lt;/sqlMapGenerator&gt;</div><div class="line">        &lt;!-- 生成DAO的包名和位置，这里配置将生成的dao类放在me.gacl.dao这个包下 --&gt;</div><div class="line">        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;me.teenyda.dao&quot; targetProject=&quot;E:\generator\src&quot;&gt;</div><div class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</div><div class="line">        &lt;/javaClientGenerator&gt;</div><div class="line">        &lt;!-- 要生成那些表(更改tableName和domainObjectName就可以) --&gt;</div><div class="line">        &lt;!-- domainObjectName的参数一定要大写开头 --&gt;</div><div class="line">        &lt;table tableName=&quot;info&quot; domainObjectName=&quot;Info&quot; enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot; /&gt;</div><div class="line">&lt;table tableName=&quot;user&quot; domainObjectName=&quot;User&quot; enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot; /&gt;</div><div class="line">    &lt;/context&gt;</div><div class="line">&lt;/generatorConfiguration&gt;</div></pre></td></tr></table></figure></p><p>使用cmd命令进入e盘:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">E:</div><div class="line">cd generator</div></pre></td></tr></table></figure></p><p>生成代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -jar mybatis-generator-core-1.3.2.jar -configfile generator.xml -overwrite</div></pre></td></tr></table></figure></p><p>提示<code>MyBatis Generator finshed successfully.</code>即成功！<br><img src="http://oyy9gorf8.bkt.clouddn.com/ok.png" alt=""></p><p>出现如图所示的错误：<br><img src="http://oyy9gorf8.bkt.clouddn.com/err1.png" alt=""><br>domainObjectName的参数一定要大写开头<br><img src="http://oyy9gorf8.bkt.clouddn.com/err2.png" alt=""></p><p>最终的目录如下：<br><img src="http://oyy9gorf8.bkt.clouddn.com/generator2.png" alt=""></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/generator3.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用到的jar包：&lt;br&gt;&lt;a href=&quot;http://oyy9gorf8.bkt.clouddn.com/mybatis-generator-core-1.3.2.jar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mybatis-generator
      
    
    </summary>
    
      <category term="mybatis" scheme="http://yoursite.com/categories/mybatis/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="mybatis" scheme="http://yoursite.com/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Java之代理模式</title>
    <link href="http://yoursite.com/-%20java%E4%B9%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/- java之代理模式/</id>
    <published>2018-01-21T02:40:48.921Z</published>
    <updated>2018-01-21T02:40:53.907Z</updated>
    
    <content type="html"><![CDATA[<p>代理(Proxy)是一种设计模式,提供了对目标对象另外的访问方式;即通过代理对象访问目标对象.这样做的好处是:可以在目标对象实现的基础上,增强额外的功能操作,即扩展目标对象的功能.<br>这里使用到编程中的一个思想:不要随意去修改别人已经写好的代码或者方法,如果需改修改,可以通过代理的方式来扩展该方法</p><p>静态代理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">package com.teenyda.静态代理;</div><div class="line"></div><div class="line"></div><div class="line">public class Demo1 &#123;</div><div class="line"></div><div class="line">public static void main(String[] args) &#123;</div><div class="line">IInsert stu = new StuDao();</div><div class="line">IInsert proxy = new InsertProxy(stu);</div><div class="line">proxy.insert(&quot;insert into p values....&quot;);</div><div class="line">proxy.update(&quot;update stu set ...&quot;);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">interface IInsert &#123;</div><div class="line">void insert(String sql);</div><div class="line">void update(String sql);</div><div class="line">&#125;</div><div class="line"></div><div class="line">class InsertProxy implements IInsert &#123;</div><div class="line">private IInsert obj;</div><div class="line"></div><div class="line">public InsertProxy(IInsert obj) &#123;</div><div class="line">this.obj = obj;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void insert(String sql) &#123;</div><div class="line">System.out.println(&quot;开始执行:&quot;);</div><div class="line">obj.insert(sql);</div><div class="line">System.out.println(&quot;执行完毕！&quot;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void update(String sql) &#123;</div><div class="line">System.out.println(&quot;开始执行&quot;);</div><div class="line">obj.update(sql);</div><div class="line">System.out.println(&quot;执行完毕！&quot;);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">class StuDao implements IInsert &#123;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void insert(String sql) &#123;</div><div class="line">System.out.println(sql);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void update(String sql) &#123;</div><div class="line">System.out.println(sql);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><blockquote><p>动态代理</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">package com.teenyda.动态代理;</div><div class="line"></div><div class="line">import java.lang.reflect.InvocationHandler;</div><div class="line">import java.lang.reflect.Method;</div><div class="line">import java.lang.reflect.Proxy;</div><div class="line"></div><div class="line"></div><div class="line">public class Demo2 &#123;</div><div class="line"></div><div class="line">public static void main(String[] args) &#123;</div><div class="line">// TODO Auto-generated method stub</div><div class="line">ILogin user = new Usre();</div><div class="line">InvocationHandler handler = new UserHandler(user);</div><div class="line">Class&lt;?&gt; clazz = user.getClass();</div><div class="line">ILogin u = (ILogin)Proxy.newProxyInstance(clazz.getClassLoader(), clazz.getInterfaces(), handler);</div><div class="line">u.login(&quot;张三&quot;);</div><div class="line">u.killBoss(&quot;张三&quot;);</div><div class="line">u.update(&quot;张三&quot;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">//接口</div><div class="line">interface ILogin&#123;</div><div class="line">void login(String name);</div><div class="line">void killBoss(String name);</div><div class="line">void update(String name);</div><div class="line">&#125;</div><div class="line"></div><div class="line">//被代理类</div><div class="line">class Usre implements ILogin&#123;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void login(String name) &#123;</div><div class="line">// TODO Auto-generated method stub</div><div class="line">System.out.println(name+&quot;登录啦！&quot;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void killBoss(String name) &#123;</div><div class="line">// TODO Auto-generated method stub</div><div class="line">System.out.println(name+&quot;击杀boss啦！&quot;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public void update(String name) &#123;</div><div class="line">// TODO Auto-generated method stub</div><div class="line">System.out.println(name+&quot;升级啦！&quot;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">//代理类</div><div class="line">class UserHandler implements InvocationHandler&#123;</div><div class="line">private Object obj;</div><div class="line">public UserHandler(Object obj) &#123;</div><div class="line">this.obj = obj;</div><div class="line">&#125;</div><div class="line">@Override</div><div class="line">public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123;</div><div class="line">System.out.print(&quot;log：&quot;);</div><div class="line">method.invoke(obj, args);</div><div class="line">System.out.println(&quot;正在记录！&quot;);</div><div class="line">return args;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><blockquote><p>动态代理-之Cglib<a href="https://mymailtccfl-my.sharepoint.com/personal/hongd49j_mymail_tcc_fl_edu/_layouts/15/guestaccess.aspx?docid=14d95528fd2fa4b0c9f7d26b8110b7de2&amp;authkey=AXQDUB5ejpByA9jt7NzR2Jk&amp;e=i9uSV2" target="_blank" rel="external">cloud-cglib.jar</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">package com.teenyda.MethodInterceptor代理;</div><div class="line"></div><div class="line">import java.lang.reflect.Method;</div><div class="line"></div><div class="line">import net.sf.cglib.proxy.Enhancer;</div><div class="line">import net.sf.cglib.proxy.MethodInterceptor;</div><div class="line">import net.sf.cglib.proxy.MethodProxy;</div><div class="line"></div><div class="line">/**</div><div class="line">* @author  作者 E-mail: </div><div class="line">* @date 创建时间：2018年1月21日 上午9:55:04 </div><div class="line">* @version 1.0 </div><div class="line">* @parameter  </div><div class="line">* @since  </div><div class="line">* @return  </div><div class="line">*/</div><div class="line">public class Demo3 &#123;</div><div class="line"></div><div class="line">public static void main(String[] args) &#123;</div><div class="line">// TODO Auto-generated method stub</div><div class="line">ManagerProxy proxy = new ManagerProxy();</div><div class="line">Manager m = (Manager)proxy.getProxy(Manager.class);</div><div class="line">m.root();</div><div class="line"></div><div class="line">ManagerProxy p2 = new ManagerProxy();</div><div class="line">Super s = (Super)p2.getProxy(Super.class);</div><div class="line">s.delete();</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">class Manager&#123;</div><div class="line">public void root() &#123;</div><div class="line">System.out.println(&quot;执行root&quot;);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">class Super&#123;</div><div class="line">public void delete() &#123;</div><div class="line">System.out.println(&quot;执行删除操作！&quot;);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">class ManagerProxy implements MethodInterceptor&#123;</div><div class="line">private Enhancer enhancer = new Enhancer();</div><div class="line">public Object getProxy(Class&lt;?&gt; clazz) &#123;</div><div class="line">enhancer.setSuperclass(clazz);</div><div class="line">enhancer.setCallback(this);</div><div class="line">return enhancer.create();</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable &#123;</div><div class="line">System.out.println(&quot;截拦！&quot;);</div><div class="line">proxy.invokeSuper(obj, args);</div><div class="line">System.out.println(&quot;保存！&quot;);</div><div class="line">return null;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;代理(Proxy)是一种设计模式,提供了对目标对象另外的访问方式;即通过代理对象访问目标对象.这样做的好处是:可以在目标对象实现的基础上,增强额外的功能操作,即扩展目标对象的功能.&lt;br&gt;这里使用到编程中的一个思想:不要随意去修改别人已经写好的代码或者方法,如果需改修改,可
      
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之表复制与字段分列</title>
    <link href="http://yoursite.com/-%20mysql%E4%B9%8B%E8%A1%A8%E5%A4%8D%E5%88%B6%E4%B8%8E%E5%AD%97%E6%AE%B5%E5%88%86%E5%88%97/"/>
    <id>http://yoursite.com/- mysql之表复制与字段分列/</id>
    <published>2018-01-09T06:26:56.533Z</published>
    <updated>2018-01-09T06:27:18.987Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#建立一个学生表</div><div class="line">create table student(</div><div class="line">id int not null primary key,</div><div class="line">name varchar(20) not null,</div><div class="line">address varchar(40) not null</div><div class="line">);</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#插入数据，地址要求是：街道名 房号</div><div class="line">insert into student values(1,&quot;张三&quot;,&quot;广职111 210&quot;);</div><div class="line">insert into student values(2,&quot;李四&quot;,&quot;广职111 206&quot;);</div><div class="line">insert into student values(3,&quot;王五&quot;,&quot;广职103 401&quot;);</div><div class="line">insert into student values(4,&quot;赵六&quot;,&quot;广职202 104&quot;);</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#查询数据</div><div class="line">select * from student;</div><div class="line">+----+--------+---------------+</div><div class="line">| id | name   | address       |</div><div class="line">+----+--------+---------------+</div><div class="line">|  1 | 张三   | 广职111 210   |</div><div class="line">|  2 | 李四   | 广职111 206   |</div><div class="line">|  3 | 王五   | 广职103 401   |</div><div class="line">|  4 | 赵六   | 广职202 104   |</div><div class="line">+----+--------+---------------+</div></pre></td></tr></table></figure><p>知识点：表的复制<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#复制一个与student一样的表，名为stu_info</div><div class="line">create table stu_info select * from student;</div><div class="line"></div><div class="line">#如果仅仅需要复制表的结构，可以用</div><div class="line">create table stu_info LIKE student;</div></pre></td></tr></table></figure></p><p>知识点：字段分列，使用的函数：SUBSTRING_INDEX()<br>用法：</p><blockquote><p>SUBSTRING_INDEX（需要分列的字段，’间隔符’，间隔符前（为正）/后（为负）的第几个的字符串）</p></blockquote><p>在分割字段前，先新增两个字段，BuildingNumbe(楼房号)和RoomNumber(房号)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">alter table stu_info ADD RoomNumber varchar(20) after address;</div><div class="line">alter table stu_info ADD BuildingNumber varchar(20) after address;</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#此处用 &apos; &apos; 空格做分隔符</div><div class="line">update stu_info set BuildingNumber = SUBSTRING_INDEX(address,&apos; &apos;,1);</div><div class="line">update stu_info set RoomNumber = SUBSTRING_INDEX(address,&apos; &apos;,-1);</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">mysql&gt; #查询数据</div><div class="line">mysql&gt; select * from stu_info;</div><div class="line">+----+--------+---------------+----------------+------------+</div><div class="line">| id | name   | address       | BuildingNumber | RoomNumber |</div><div class="line">+----+--------+---------------+----------------+------------+</div><div class="line">|  1 | 张三   | 广职111 210   | 广职111        | 210        |</div><div class="line">|  2 | 李四   | 广职111 206   | 广职111        | 206        |</div><div class="line">|  3 | 王五   | 广职103 401   | 广职103        | 401        |</div><div class="line">|  4 | 赵六   | 广职202 104   | 广职202        | 104        |</div><div class="line">+----+--------+---------------+----------------+------------+</div><div class="line">4 rows in set (0.00 sec)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
      
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL存储过程练习</title>
    <link href="http://yoursite.com/-%20mysql%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <id>http://yoursite.com/- mysql存储过程/</id>
    <published>2017-12-29T06:16:57.362Z</published>
    <updated>2017-12-29T06:17:00.798Z</updated>
    
    <content type="html"><![CDATA[<p><i class="fa fa-calendar-o" aria-hidden="true"></i>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">CREATE PROCEDURE sp_name([proc_paramenter])</div><div class="line">[characteristices···]routinue_body</div></pre></td></tr></table></figure></p><blockquote><p>sp_name 为存储过程名称；proc_paramenter 为参数列表，参数列表形式如下：</p></blockquote><p id="div-border-left-purple">[IN|OUT|INOUT]param_name type</p><ul class="fa-ul"><br>  <li><i class="fa-li fa fa-check-square"></i>OUT表示输出参数</li><br>  <li><i class="fa-li fa fa-check-square"></i>INOUT表示既可以输入也可以输出</li><br>  <li><i class="fa-li fa fa-spinner fa-spin"></i>param_name表示参数名称</li><br>  <li><i class="fa-li fa fa-square"></i>type表示参数的类型，可以是MySQL数据库中的任意类型</li><br></ul><hr><p><i class="fa fa-pencil-square-o" aria-hidden="true"></i>创建一个学生信息表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">create table info</div><div class="line">(</div><div class="line">id int primary key auto_increment,</div><div class="line">name varchar(20) ,</div><div class="line">grade int </div><div class="line">);</div></pre></td></tr></table></figure></p><p><i class="fa fa-pencil-square-o" aria-hidden="true"></i>插入几条数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">insert into info(name,grade) values(&apos;张三&apos;,79);</div><div class="line">insert into info(name,grade) values(&apos;李四&apos;,65);</div><div class="line">insert into info(name,grade) values(&apos;王五&apos;,17);</div><div class="line">insert into info(name,grade) values(&apos;贼六&apos;,99);</div><div class="line">insert into info(name,grade) values(&apos;鬼脚七&apos;,38);</div><div class="line">insert into info(name,grade) values(&apos;孙八&apos;,54);</div></pre></td></tr></table></figure></p><p><i class="fa fa-pencil-square-o" aria-hidden="true"></i>创建一个存储过程，用于统计总分，及格人数和不及格人数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">delimiter $$</div><div class="line">#第一个参数为分数条件，第二个参数为总分数，第三个参数为及格人数，第四个为不及格人数</div><div class="line">create procedure pro_lookup(IN condit int, OUT total_score int, OUT pass_number int, OUT no_pass_number int)</div><div class="line">begin </div><div class="line">#添加一个变量，用来保存总学生人数</div><div class="line">DECLARE stu_count int;</div><div class="line">#定义变量i</div><div class="line">DECLARE i int ;</div><div class="line">#定义成绩变量</div><div class="line">DECLARE s_grade int;</div><div class="line">#为三个输出参数初始化</div><div class="line">SET total_score = 0 ;</div><div class="line">SET pass_number = 0 ;</div><div class="line">SET no_pass_number = 0 ;</div><div class="line">SET i = 1 ;</div><div class="line">#获取学生个数</div><div class="line">select COUNT(id) into stu_count from info ;</div><div class="line">WHILE i &lt;= stu_count DO </div><div class="line">    #为s_grade赋值</div><div class="line">    select grade into s_grade from info where id = i ;</div><div class="line">    #判断s_grade是否大于某个分数</div><div class="line">    IF s_grade &gt; condit THEN</div><div class="line">        #及格人数+1</div><div class="line">        SET pass_number = pass_number + 1;</div><div class="line">    ELSE</div><div class="line">        #否则不及格人数+1</div><div class="line">        SET no_pass_number = no_pass_number + 1 ;</div><div class="line">    END IF ;</div><div class="line">    #总分数</div><div class="line">    SET total_score = total_score + s_grade ;</div><div class="line">    SET i = i + 1 ;</div><div class="line">END WHILE ;</div><div class="line">end ;</div><div class="line">$$</div><div class="line">delimiter ;</div></pre></td></tr></table></figure></p><p><i class="fa fa-cog fa-spin fa-3x fa-fw"></i><br><span class="sr-only">Loading…</span>调用存储过程<br><i class="fa fa-calendar-o" aria-hidden="true"></i>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CALL sp_name([parameter[,···])</div></pre></td></tr></table></figure></p><blockquote><p>sp_name为存储过程名称，parameter为存储过程的参数。用 @变量名 来接收传出参数。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#第一个参数，我把及格分设为70</div><div class="line">CALL pro_lookup(70,@total,@count_pass,@count_Nopass);</div></pre></td></tr></table></figure><p><i class="fa fa-calendar-o" aria-hidden="true"></i>查看结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select @total,@count_pass,@count_Nopass;</div></pre></td></tr></table></figure></p><p><i class="fa fa-calendar-o" aria-hidden="true"></i>为变量名起别名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select @total as 总分,@count_pass as 及格人数,@count_Nopass as 不及格人数;</div><div class="line">#简写方式</div><div class="line">select @total 总分,@count_pass 及格人数,@count_Nopass 不及格人数;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;i class=&quot;fa fa-calendar-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;语法：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;
      
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL为表和字段取别名</title>
    <link href="http://yoursite.com/-%20mysql%E4%B8%BA%E8%A1%A8%E5%92%8C%E5%AD%97%E6%AE%B5%E5%8F%96%E5%88%AB%E5%90%8D/"/>
    <id>http://yoursite.com/- mysql为表和字段取别名/</id>
    <published>2017-12-29T06:09:51.537Z</published>
    <updated>2017-12-29T06:09:55.764Z</updated>
    
    <content type="html"><![CDATA[<p id="div-border-left-yellow">在查询数据时，可以为表和字段取别名，这个别名可以取代其指定的表和字段。</p><p><i class="fa fa-pencil-square-o" aria-hidden="true">为表名取别名</i><br><span id="inline-blue">格式</span><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM 表名 [AS] 别名;</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from info as i where i.id = 1;</div><div class="line">+----+--------+-------+</div><div class="line">| id | name   | grade |</div><div class="line">+----+--------+-------+</div><div class="line">|  1 | 张三   |    79 |</div><div class="line">+----+--------+-------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><p><i class="fa fa-pencil-square-o" aria-hidden="true">为字段取别名</i><br><span id="inline-blue">格式</span><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * 字段名 [AS] 别名[,字段名 [AS] 别名,...] FROM 别名;</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select id as 序号, name as 姓名, grade as 成绩 from info;</div><div class="line">+--------+-----------+--------+</div><div class="line">| 序号   | 姓名      | 成绩   |</div><div class="line">+--------+-----------+--------+</div><div class="line">|      1 | 张三      |     79 |</div><div class="line">|      2 | 李四      |     65 |</div><div class="line">|      3 | 王五      |     17 |</div><div class="line">|      4 | 贼六      |     99 |</div><div class="line">|      5 | 鬼脚七    |     38 |</div><div class="line">|      6 | 孙八      |     54 |</div><div class="line">+--------+-----------+--------+</div><div class="line">6 rows in set (0.00 sec)</div></pre></td></tr></table></figure><p><span id="inline-blue">简写方式</span><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select id 序号, name 姓名, grade 成绩 from info;</div><div class="line">+--------+-----------+--------+</div><div class="line">| 序号   | 姓名      | 成绩   |</div><div class="line">+--------+-----------+--------+</div><div class="line">|      1 | 张三      |     79 |</div><div class="line">|      2 | 李四      |     65 |</div><div class="line">|      3 | 王五      |     17 |</div><div class="line">|      4 | 贼六      |     99 |</div><div class="line">|      5 | 鬼脚七    |     38 |</div><div class="line">|      6 | 孙八      |     54 |</div><div class="line">+--------+-----------+--------+</div><div class="line">6 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p><p>推荐使用 as 关键字，看起来更加规范。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p id=&quot;div-border-left-yellow&quot;&gt;在查询数据时，可以为表和字段取别名，这个别名可以取代其指定的表和字段。&lt;/p&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-pencil-square-o&quot; aria-hidden=&quot;true&quot;&gt;为表名取别名&lt;/i&gt;&lt;br
      
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>vps搭建Leanote(蚂蚁笔记)</title>
    <link href="http://yoursite.com/-%20vps%E6%90%AD%E5%BB%BALeanote(%E8%9A%82%E8%9A%81%E7%AC%94%E8%AE%B0)/"/>
    <id>http://yoursite.com/- vps搭建Leanote(蚂蚁笔记)/</id>
    <published>2017-12-25T03:29:53.631Z</published>
    <updated>2017-12-25T03:29:55.924Z</updated>
    
    <content type="html"><![CDATA[<p></p><h1>蚂蚁笔记，有极客范的云笔记！</h1><br><a href="https://leanote.com/" target="_blank" rel="external">官网：https://leanote.com/</a><p></p><blockquote><p>它最大的特点就是简约、免费、开源、支持 Markdown 语法，支持程序代码高亮、笔记历史记录、支持笔记分享协作、将笔记发布成博客等功能……</p></blockquote><p>下面是我搭建Leabote的过程！</p><h2>1.安装 golang 环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://storage.googleapis.com/golang/go1.8.linux-amd64.tar.gz</div></pre></td></tr></table></figure><p>解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf go1.8.linux-amd64.tar.gz</div></pre></td></tr></table></figure></p><p>创建gopackage文件夹用于存放golang的程序包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir gopackage</div></pre></td></tr></table></figure></p><p>添加golang环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/profile</div></pre></td></tr></table></figure></p><p>在最底下添加代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">export GOROOT=/root/go</div><div class="line">export GOPATH=/root/gopackage</div><div class="line">export PATH=$PATH:$GOROOT/bin:$GOPATH/bin</div></pre></td></tr></table></figure></p><p>输入命令使环境生效：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure></p><p>输入命令检查 golang 是否安装成功：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">go version</div></pre></td></tr></table></figure></p><p>若安装成功，则会显示 golang 版本号。</p><p></p><h2>2.获取Revel和 Leanote 的源码</h2><br>输入命令下载 revel Web 框架源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git-core mercurial openssh-server openssh-client</div><div class="line">go get github.com/revel/cmd/revel</div></pre></td></tr></table></figure><p></p><p>获取 Leanote 源码<br>上面已经创建了 gopackage 文件夹用于存放程序源码包，因此我们只需要下载好 revel 和 Leanote 服务端的源码包，然后解压放入 gopackage 文件夹即可。</p><p>接上面的步骤，当前处于 /root 目录，进入 gopackage 文件夹：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd gopackage</div></pre></td></tr></table></figure></p><p>下载Leanote服务端源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/leanote/leanote-all/archive/master.zip</div></pre></td></tr></table></figure></p><p>解压:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">unzip master.zip</div></pre></td></tr></table></figure></p><p>将解压出来的 leanote-all-master 文件夹内的 src 文件夹移到 gopackage 文件夹内：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv /root/gopackage/master/src /root/gopackage</div></pre></td></tr></table></figure></p><p></p><h2>3.安装 MongoDB 数据库</h2><br>回到 /root 目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~</div></pre></td></tr></table></figure><p></p><p>下载 MongoDB 数据库源码并解压：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.1.tgz</div><div class="line">tar -xzvf mongodb-linux-x86_64-3.0.1.tgz</div></pre></td></tr></table></figure></p><p>编辑/etc/profile配置文件，添加 MongoDB 数据库的环境变量：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export PATH=$PATH:/root/mongodb-linux-x86_64-3.0.1/bin</div></pre></td></tr></table></figure></p><p>路径要正确<br>运行以下命令使环境变量生效:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure></p><p>3.1测试Mongodb安装<br>新建一个目录data存放Mongodb数据，（此时路径在/root）:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir data</div></pre></td></tr></table></figure></p><p>新建窗口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">screen -S mo</div></pre></td></tr></table></figure></p><p>启动mongod:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongod --dbpath /root/data</div></pre></td></tr></table></figure></p><p>这时mongod已经启动,Ctrl + a ， 松手， 按键盘 D 键 后台运行</p><p>键入mongo进入交互程序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mongo</div><div class="line">&gt; show dbs</div><div class="line">......显示数据库列表</div></pre></td></tr></table></figure></p><p></p><h2>4.导入Leanote初始数据</h2><br>leanote 初始数据在/home/user1/gopackage/src/github.com/leanote/leanote/mongodb_backup/leanote_install_data中。<p></p><p>打开终端， 输入以下命令导入数据。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongorestore -h localhost -d leanote --dir /root/gopackage/src/github.com/leanote/leanote/mongodb_backup/leanote_install_data</div></pre></td></tr></table></figure></p><p>现在在mongodb中已经新建了leanote数据库, 可用命令查看下Leanote有多少张”表”:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt; mongo</div><div class="line">&gt; show dbs</div><div class="line">leanote0.203125GB</div><div class="line">local0.078125GB</div><div class="line">&gt; use leanote # 切换到leanote</div><div class="line">switched to db leanote</div><div class="line">&gt; show collections # 查看表</div><div class="line">files</div><div class="line">has_share_notes</div><div class="line">note_content_histories</div><div class="line">note_contents</div></pre></td></tr></table></figure></p><p></p><h2>5.配置Leanote</h2><br>Leanote的配置存储在文件 gopackage/src/github.com/leanote/leanote/conf 中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd gopackage/src/github.com/leanote/leanote/conf</div><div class="line">vi app.conf</div></pre></td></tr></table></figure><p></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># 访问端口 可以自定义</div><div class="line">http.port=9000</div><div class="line"># 访问域名</div><div class="line">site.url=http://</div><div class="line"># 管理员用户名（默认用户名admin，密码abc123）</div><div class="line"># 如果不小心删除数据库的admin用户，下面可以更换管理员账号</div><div class="line">adminUsername=admin</div></pre></td></tr></table></figure><p>请务必修改app.secret一项, 在若干个随机位置处，将字符修改成一个其他的值, 否则会有安全隐患!</p><p></p><h2>6.运行Leanote</h2><br>注意: 在此之前请确保Mongodb已在运行!<p></p><p>新开一个窗口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">screen -S lea</div></pre></td></tr></table></figure></p><p>运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">revel run github.com/leanote/leanote</div></pre></td></tr></table></figure></p><p>恭喜你, 打开浏览器输入: <a href="http://IP地址:9000" target="_blank" rel="external">http://IP地址:9000</a> 体验Leanote吧</p><p>客户端：<br><img src="http://oyy9gorf8.bkt.clouddn.com/%E5%AE%A2%E6%88%B7%E7%AB%AF.png" alt=""></p><p>网页版：<br><img src="http://oyy9gorf8.bkt.clouddn.com/%E7%BD%91%E9%A1%B5%E7%AB%AF.png" alt=""></p><p></p><h2>7.配置https</h2><br>安装nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install nginx</div></pre></td></tr></table></figure><p></p><p>我在leanote的配置（gopackage/src/github.com/leanote/leanote/conf/app.conf）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#------------------------</div><div class="line"># leanote config</div><div class="line">#------------------------</div><div class="line"></div><div class="line">http.port=9000</div><div class="line"></div><div class="line">site.url=http://teenyda.cn # or http://x.com:8080, http://www.xx.com:9000</div><div class="line"></div><div class="line"># admin username</div><div class="line">adminUsername=teenyda</div><div class="line"></div><div class="line"># mongdb</div><div class="line">db.host=127.0.0.1</div><div class="line">db.port=27017</div><div class="line">db.dbname=leanote # required</div><div class="line">db.username= # if not exists, please leave it blank</div><div class="line">db.password= # if not exists, please leave it blank</div></pre></td></tr></table></figure></p><p>我在nginx中的配置：(ubuntu14环境下的 /etc/nginx/sites-available/default)<br>修改前请备份一份原配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 80;</div><div class="line">        listen [::]:80 default_server ipv6only=on;</div><div class="line"></div><div class="line">#       root /usr/share/nginx/html;</div><div class="line">#       index index.html index.htm;</div><div class="line"></div><div class="line">        # Make site accessible from http://localhost/</div><div class="line">        server_name teenyda.cn;</div><div class="line">        #强制https，不想这样可以注释或者删除</div><div class="line">        rewrite ^/(.*) https://teenyda.cn/$1 permanent;</div><div class="line">        location / &#123;</div><div class="line">            proxy_pass        http://teenyda.cn;</div><div class="line">            proxy_set_header   Host             $host;</div><div class="line">            proxy_set_header   X-Real-IP        $remote_addr;</div><div class="line">            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;</div><div class="line">               </div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"># HTTPS server</div><div class="line">#</div><div class="line">server &#123;</div><div class="line">        listen 443;</div><div class="line">        server_name teenyda.cn;</div><div class="line">#</div><div class="line">#       root html;</div><div class="line">#       index index.html index.htm;</div><div class="line">#</div><div class="line">        ssl on;</div><div class="line">        ssl_certificate /root/teenyda.cn/1_teenyda.cn_bundle.crt;</div><div class="line">        ssl_certificate_key /root/teenyda.cn/2_teenyda.cn.key;</div><div class="line">#</div><div class="line">#       ssl_session_timeout 5m;</div><div class="line">#</div><div class="line">#       ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;</div><div class="line">#       ssl_ciphers &quot;HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES&quot;;</div><div class="line">#       ssl_prefer_server_ciphers on;</div><div class="line">#</div><div class="line">        location / &#123;</div><div class="line">#               try_files $uri $uri/ =404;</div><div class="line">            proxy_pass        http://teenyda.cn:9000;</div><div class="line">            proxy_set_header   Host             $host;</div><div class="line">            proxy_set_header   X-Real-IP        $remote_addr;</div><div class="line">            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><blockquote><p>它看起来jx就像这样子，并没有http{ }一个大括号包围着</p></blockquote><p><img src="http://oyy9gorf8.bkt.clouddn.com/nginx-default.png" alt="ssl配置"></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/ssl.png" alt=""></p><p>重启一下nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service nginx restart</div></pre></td></tr></table></figure></p><p>启动mongod命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongod --dbpath /root/data</div></pre></td></tr></table></figure></p><p>启动leanote命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">revel run github.com/leanote/leanote</div></pre></td></tr></table></figure></p><p>参考教程：</p><ul><li><a href="https://www.idaybreak.com/install-leanote-server.html" target="_blank" rel="external">晓岛</a></li><li><a href="https://github.com/leanote/leanote/wiki/Leanote-%E6%BA%90%E7%A0%81%E7%89%88%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B----Mac-and-Linux#4-%E5%AF%BC%E5%85%A5%E5%88%9D%E5%A7%8B%E6%95%B0%E6%8D%AE" target="_blank" rel="external">Github/leanote</a></li><li><a href="https://github.com/leanote/leanote/wiki/QA#%E5%A6%82%E4%BD%95%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D" target="_blank" rel="external">Github/leanote-QA</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h1&gt;蚂蚁笔记，有极客范的云笔记！&lt;/h1&gt;&lt;br&gt;&lt;a href=&quot;https://leanote.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网：https://leanote.com/&lt;/a&gt;&lt;p&gt;&lt;/p&gt;
&lt;blockquo
      
    
    </summary>
    
    
      <category term="Leanote" scheme="http://yoursite.com/tags/Leanote/"/>
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>个人博客常用链接</title>
    <link href="http://yoursite.com/-%20%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5/"/>
    <id>http://yoursite.com/- 个人博客常用链接/</id>
    <published>2017-12-20T11:35:51.337Z</published>
    <updated>2017-12-20T11:37:12.446Z</updated>
    
    <content type="html"><![CDATA[<p></p><h1><i class="fa fa-user-circle-o" aria-hidden="true"></i>服务类</h1><br><a href="https://portal.qiniu.com/bucket/teenyda/resource" target="_blank" rel="external">七牛云</a><p></p><blockquote><p>七牛云是国内领先的企业级云服务商，专注于以数据管理为中心的云计算业务研发和运营，围绕富媒体场景推出了对象存储、融合 CDN 加速、容器计算云、大数据平台、人工智能平台等产品，并提供一站式视频云解决方案。</p></blockquote><p><br><br><a href="https://www.algolia.com/" target="_blank" rel="external">algolia</a></p><blockquote><p>Algolia是一个强大的托管搜索引擎API，为产品团队提供了创建快速相关搜索所需的资源和工具。</p></blockquote><p><br><br><a href="https://app.swiftype.com/engines/new" target="_blank" rel="external">swiftype</a></p><blockquote><p>搜索引擎</p></blockquote><p><br><br><a href="http://fontawesome.io/examples/" target="_blank" rel="external">fontawesome</a> </p><blockquote><p>Font Awesome 字体为您提供可缩放矢量图标,它可以被定制大小、颜色、阴影以及任何可以用CSS的样式。支持Markdown!</p></blockquote><p><br></p><p></p><h1><i class="fa fa-ravelry" aria-hidden="true"></i>vps</h1><br><a href="http://cn.raksmart.com/" target="_blank" rel="external">raksmart</a><p></p><blockquote><p>RakSmart数据中心位于美国加州，中国访问速度快，稳定性好，其冗余性能确保了RakSmart国外服务器正常在线时间和快速的访问。</p></blockquote><p><img src="http://oyy9gorf8.bkt.clouddn.com/raksmart.png" alt="此处输入图片的描述"><br><span id="inline-blue">ping值</span><br><img src="http://oyy9gorf8.bkt.clouddn.com/ping_raksmart.png" alt="此处输入图片的描述"></p><p><br><br><a href="https://manage.hostdare.com/index.php?language=chinese" target="_blank" rel="external">hostdare</a></p><blockquote><p>服务器便宜，最低2.99刀，配置不错，而且还可以微信支付</p></blockquote><p><img src="http://oyy9gorf8.bkt.clouddn.com/hostdare.png" alt="此处输入图片的描述"><br><span id="inline-blue">ping值</span><br><img src="http://oyy9gorf8.bkt.clouddn.com/ping_hostdart.png" alt="此处输入图片的描述"></p><p><br><br><a href="https://www.somagu.com/vps/create/1" target="_blank" rel="external">somagu</a></p><blockquote><p>一家韩国的服务器！按小时计费，一个月2.59刀</p></blockquote><p><img src="http://oyy9gorf8.bkt.clouddn.com/somagu.png" alt="此处输入图片的描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h1&gt;&lt;i class=&quot;fa fa-user-circle-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;服务类&lt;/h1&gt;&lt;br&gt;&lt;a href=&quot;https://portal.qiniu.com/bucket/teenyda/resource&quot; targ
      
    
    </summary>
    
      <category term="实用技术" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="链接" scheme="http://yoursite.com/tags/%E9%93%BE%E6%8E%A5/"/>
    
      <category term="vps" scheme="http://yoursite.com/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>VPS性能测试</title>
    <link href="http://yoursite.com/-%20vps%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/- vps性能测试/</id>
    <published>2017-12-20T04:20:14.181Z</published>
    <updated>2017-12-20T04:20:20.832Z</updated>
    
    <content type="html"><![CDATA[<p>一、VPS性能测试：CPU物理个数、内核、超线程、多核心<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /proc/cpuinfo</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/cpu.png" alt=""></p><p>二、VPS性能测试：内存大小、交换空间、高速缓存、实际使用内存<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /proc/meminfo</div></pre></td></tr></table></figure></p><p>查看占用的内存大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">free -m</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20171216191912.png" alt=""><br>计算VPS真实的使用内存方法是：Total-Free-Cached=真实使用内存<br>即： 486-11-214 = 261 表示我的VPS真实使用的内存是261MB</p><p>三、VPS性能测试：磁盘IO读写速度、SSD硬盘速度测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dd if=/dev/zero of=test bs=64k count=4k oflag=dsync</div><div class="line">dd if=/dev/zero of=test bs=8k count=256k conv=fdatasync</div></pre></td></tr></table></figure></p><p>VPS硬盘IO负载测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">top</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20171216192433.png" alt=""></p><p>速度测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://cachefly.cachefly.net/100mb.test &amp;&amp; rm 100mb.test</div></pre></td></tr></table></figure></p><p>测试VPS主机在世界各地的下载速度的一键脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget freevps.us/downloads/bench.sh -O - -o /dev/null | bash</div></pre></td></tr></table></figure></p><p>测试VPS主机入口与出口的带宽一键脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py</div><div class="line">python speedtest.py</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20171216193029.png" alt=""></p><p>I/O测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -qO- bench.sh | bash</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/20171216195839.png" alt=""></p><p>参考链接：<br><a href="https://www.freehao123.com/vps-cpu-io-unixbench/" target="_blank" rel="external">免费资源部落</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、VPS性能测试：CPU物理个数、内核、超线程、多核心&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;t
      
    
    </summary>
    
      <category term="使用技术" scheme="http://yoursite.com/categories/%E4%BD%BF%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="vps" scheme="http://yoursite.com/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>MySQL解决中文乱码问题</title>
    <link href="http://yoursite.com/-%20mysql%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    <id>http://yoursite.com/- mysql中文乱码/</id>
    <published>2017-12-08T09:33:08.189Z</published>
    <updated>2017-12-08T09:33:12.615Z</updated>
    
    <content type="html"><![CDATA[<p>有时候在表中插入数据要用到中文，但是在插入数据时遇到了下面这种情况<i class="fa fa-thumbs-o-down" aria-hidden="true"></i>（以test表为例）：<br><img src="http://oyy9gorf8.bkt.clouddn.com/mysql_1.PNG" alt=""></p><p>查看test表的结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show create database test;</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/mysql_2.PNG" alt=""></p><p>改变test表的编码方式:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter database test default character set utf8 collate utf8_bin;</div></pre></td></tr></table></figure></p><p>这时候再次插入数据，发现还是不行，查看一下数据库与操作系统编码<i class="fa fa-file-text" aria-hidden="true"></i><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show variables like &apos;%char%&apos;;</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/mysql_3.PNG" alt=""></p><p>我们把character_set_client、character_set_connection、character_set_database、character_set_server都设为utf8<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">set character_set_client=utf8;</div><div class="line">set character_set_connection=utf8;</div><div class="line">set character_set_database=utf8;</div><div class="line">set character_set_server=utf8;</div></pre></td></tr></table></figure></p><p>查看编码<br><img src="http://oyy9gorf8.bkt.clouddn.com/mysql_4.PNG" alt=""></p><p>如果原来的表不可以插入中文的话，可以重建一张表<i class="fa fa-hand-o-right" aria-hidden="true"></i>；<br><img src="http://oyy9gorf8.bkt.clouddn.com/mysql_5.PNG" alt=""></p><p>但是还有一个问题没有解决，就是重新打开数据库时，数据库编码又变回来了。<br><img src="http://oyy9gorf8.bkt.clouddn.com/mysql_6.PNG" alt=""></p><p>这时，我们要从根本上解决问题–&gt;修改mysql的配置文件</p><p>查看mysql默认读取my.cnf的目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql --help | grep my.cnf</div></pre></td></tr></table></figure></p><p>输出如下：<br>ubuntu@localhost:/etc/mysql$ mysql –help | grep my.cnf<br>                      order of preference, my.cnf, $MYSQL_TCP_PORT,<br>/etc/my.cnf /etc/mysql/my.cnf ~/.my.cnf</p><p>我们进入到/etc/mysql/目录下，查看my.cnf文件。发现my.cnf的文件是这样的。<br><img src="http://oyy9gorf8.bkt.clouddn.com/mysql_7.PNG" alt=""><br>我们发现，这里面并没有看见相关的配置，瞬间懵逼！因为我们平时看到的是这个样子的<br><img src="http://oyy9gorf8.bkt.clouddn.com/mysql_9.PNG" alt=""></p><p>没关系！我们直接修改，插入下面的数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[mysqld]</div><div class="line">character-set-server=utf8</div><div class="line"></div><div class="line">[client]</div><div class="line">default-character-set=utf8</div><div class="line"></div><div class="line">[mysql]</div><div class="line">default-character-set=utf8</div></pre></td></tr></table></figure></p><p>重启数据库（ubuntu 16）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/mysql restart</div></pre></td></tr></table></figure></p><p>ubuntu14执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysql restart</div></pre></td></tr></table></figure></p><p>这时候查看编码方式：<br><img src="http://oyy9gorf8.bkt.clouddn.com/mysql_8.PNG" alt=""></p><p>大功告成！<i class="fa fa-thumbs-up" aria-hidden="true"></i><i class="fa fa-thumbs-up" aria-hidden="true"></i><i class="fa fa-thumbs-up" aria-hidden="true"></i><i class="fa fa-thumbs-up" aria-hidden="true"></i><i class="fa fa-thumbs-up" aria-hidden="true"></i><i class="fa fa-thumbs-up" aria-hidden="true"></i><i class="fa fa-thumbs-up" aria-hidden="true"></i><i class="fa fa-thumbs-up" aria-hidden="true"></i></p><p>参考：<a href="http://blog.csdn.net/u012410733/article/details/61619656" target="_blank" rel="external">http://blog.csdn.net/u012410733/article/details/61619656</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有时候在表中插入数据要用到中文，但是在插入数据时遇到了下面这种情况&lt;i class=&quot;fa fa-thumbs-o-down&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;（以test表为例）：&lt;br&gt;&lt;img src=&quot;http://oyy9gorf8.bkt.clou
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL相关命令</title>
    <link href="http://yoursite.com/-%20mysql/"/>
    <id>http://yoursite.com/- mysql/</id>
    <published>2017-11-30T09:56:44.263Z</published>
    <updated>2017-11-30T09:56:50.750Z</updated>
    
    <content type="html"><![CDATA[<p>SQL语句通常可分为如下几种类型。<br><i class="fa fa-search" aria-hidden="true"></i>查询语句： 主要由selsct关键字完成，查询语句是SQL语句中最复杂、功能最丰富的语句。<br><i class="fa fa-eyedropper" aria-hidden="true"></i>DML语句（数据操作语言）： 主要由insert、update和delete三个关键字完成。<br><i class="fa fa-list-alt" aria-hidden="true"></i>DDL语句（数据定义语言）： 主要由create、alter、drop和truncate四个关键字完成。<br><i class="fa fa-tachometer" aria-hidden="true"></i>DCL语句（数据控制语言）： 主要由grant和revoke两个关键字完成。<br><i class="fa fa-hourglass-end" aria-hidden="true"></i>事务控制语句： 主要由commit、rollback和savepoint三个关键字完成。</p><p><center><span id="inline-blue">MySQL相关命令</span><br></center><br><img src="http://oyy9gorf8.bkt.clouddn.com/MySQL-images.jpg" alt=""><br>1.登录命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u username -p</div></pre></td></tr></table></figure></p><p>2.创建用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">create user &apos;用户名&apos;@&apos;localhost&apos; identified by &apos;密码&apos;</div></pre></td></tr></table></figure></p><p>2.1 赋权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grant all privileges on &apos;数据库名&apos;.* to &apos;用户名&apos;@&apos;localhost&apos;</div></pre></td></tr></table></figure></p><p>3.查看数据库的信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show create database 库名</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/mysql-info.PNG" alt=""></p><p>4.修改数据库编码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter database 库名 default character SET 编码方式 collate 编码方式_bin</div></pre></td></tr></table></figure></p><p>5.删除数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">drop database 数据库名</div></pre></td></tr></table></figure></p><p>6.查看表结构(表的字段信息)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">desc 表名</div></pre></td></tr></table></figure></p><p>7.修改表名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter table 旧表名 rename to 新表名</div></pre></td></tr></table></figure></p><p>8.修改字段名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter table 表名 change 旧字段 新字段 新数据类型</div></pre></td></tr></table></figure></p><p>9.修改字段类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter table 表名 modify 字段名 数据类型</div></pre></td></tr></table></figure></p><p>10.添加字段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter table 表名 add 新字段名 数据类型 [约束条件][FIRST|AFLTER 已存在字段名]</div></pre></td></tr></table></figure></p><p>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter table test my_db add age INT</div></pre></td></tr></table></figure></p><p>11.删除字段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter table 表名 drop 字段名</div></pre></td></tr></table></figure></p><p>12.删除表名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">drop table 表名</div></pre></td></tr></table></figure></p><p>13.删除表中所有记录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">delect from 表名</div><div class="line">或者</div><div class="line">truncate [TABLE] 表名</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;SQL语句通常可分为如下几种类型。&lt;br&gt;&lt;i class=&quot;fa fa-search&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;查询语句： 主要由selsct关键字完成，查询语句是SQL语句中最复杂、功能最丰富的语句。&lt;br&gt;&lt;i class=&quot;fa fa-eyed
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>服务器用sendgrid发邮件</title>
    <link href="http://yoursite.com/sendgrid%E9%82%AE%E4%BB%B6/"/>
    <id>http://yoursite.com/sendgrid邮件/</id>
    <published>2017-11-25T07:19:06.876Z</published>
    <updated>2017-11-25T07:19:12.376Z</updated>
    
    <content type="html"><![CDATA[<p id="div-border-left-green">注册地址：<a href="https://sendgrid.com/" target="_blank" rel="external">sendgrid</a></p><p>进入仪表盘，点击Setup Guide<br><img src="http://oyy9gorf8.bkt.clouddn.com/sendgraid_1.PNG" alt=""></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/sendgraid_2.PNG" alt=""></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/sendgraid_3.PNG" alt=""></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/sendgraid_4.PNG" alt=""></p><p>把API key复制下来<br><img src="http://oyy9gorf8.bkt.clouddn.com/sendgraid_5.PNG" alt=""></p><p>官方python教程地址<a href="https://github.com/sendgrid/sendgrid-python#with-mail-helper-class" target="_blank" rel="external">Github</a><br>按照官方教程，我们测试发送一封邮件！</p><blockquote><p>YOUR_API_KEY 就是刚才的api key<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">echo &quot;export SENDGRID_API_KEY=&apos;YOUR_API_KEY&apos;&quot; &gt; sendgrid.env</div><div class="line">echo &quot;sendgrid.env&quot; &gt;&gt; .gitignore</div><div class="line">source ./sendgrid.env</div></pre></td></tr></table></figure></p></blockquote><p>安装Sendgrid<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get python-pip</div><div class="line">sudo pip install sendgrid</div></pre></td></tr></table></figure></p><p>新建一个文件，比如test.py<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi test.py</div></pre></td></tr></table></figure></p><p>官方给出的演示如下<i class="fa fa-cog fa-spin fa-3x fa-fw"></i><br><img src="http://oyy9gorf8.bkt.clouddn.com/sendgraid_6.PNG" alt=""></p><p>我们把它复制到test.py<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">import sendgrid</div><div class="line">import os</div><div class="line">from sendgrid.helpers.mail import *</div><div class="line"></div><div class="line">sg = sendgrid.SendGridAPIClient(apikey=os.environ.get(&apos;SENDGRID_API_KEY&apos;))</div><div class="line">from_email = Email(&quot;test@example.com&quot;)</div><div class="line">to_email = Email(&quot;test@example.com&quot;)</div><div class="line">subject = &quot;Sending with SendGrid is Fun&quot;</div><div class="line">content = Content(&quot;text/plain&quot;, &quot;and easy to do anywhere, even with Python&quot;)</div><div class="line">mail = Mail(from_email, subject, to_email, content)</div><div class="line">response = sg.client.mail.send.post(request_body=mail.get())</div><div class="line">print(response.status_code)</div><div class="line">print(response.body)</div><div class="line">print(response.headers)</div></pre></td></tr></table></figure></p><p>最后 <code>python test.py</code> <i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><br><span id="inline-blue">发送成功！</span> <i class="fa fa-envelope-open" aria-hidden="true"></i></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/sendgraid_7.PNG" alt=""></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/sendgraid_8.PNG" alt=""></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/sendgraid_9.PNG" alt=""></p><p>为了防止邮箱被轰炸，所以涂鸦了-_- </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p id=&quot;div-border-left-green&quot;&gt;注册地址：&lt;a href=&quot;https://sendgrid.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sendgrid&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;进入仪表盘，点击Setup Guide&lt;b
      
    
    </summary>
    
      <category term="测试" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="邮件" scheme="http://yoursite.com/tags/%E9%82%AE%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>ububtu更换内核（安装锐速）</title>
    <link href="http://yoursite.com/ubuntu%E6%9B%B4%E6%8D%A2%E5%86%85%E6%A0%B8/"/>
    <id>http://yoursite.com/ubuntu更换内核/</id>
    <published>2017-11-25T07:04:30.476Z</published>
    <updated>2017-11-25T07:04:34.126Z</updated>
    
    <content type="html"><![CDATA[<p id="div-border-left-yellow">本篇文章主要是介绍更换内核版本为锐速所支持的版本！</p><p>ubuntu更换内核版本为：linux-image-3.03.-24-generic</p><p><span id="inline-purple">首先保证你的服务器是64位系统，锐速不支持任何ubuntu14.04的32位系统</span></p><p>1.安装3.13.0-24-generic内核<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install linux-image-extra-3.13.0-24-generic</div></pre></td></tr></table></figure></p><p>2.查看当前安装的内核：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dpkg -l | grep linux-image</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/linux-image.PNG" alt=""><br>3.除了3.13.0-24-generic的内核，我们把他们卸载掉<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get purge linux-image-3.13.0-121-generic linux-image-3.13.0-128-generic</div><div class="line">(多个内核用空格隔开)...</div></pre></td></tr></table></figure></p><p>可以看到，最后只剩下我们所要的内核<br><img src="http://oyy9gorf8.bkt.clouddn.com/linux-image2.PNG" alt=""></p><p>4.更新grub系统引导文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo update-grub</div></pre></td></tr></table></figure></p><p>5.重启<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo reboot</div></pre></td></tr></table></figure></p><p>6.重启之后可以看到，我们用的是3.13.0-24-generic<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname -r</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/linux-image3.PNG" alt=""></p><p>7.安装锐速破解版：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/wn789/serverspeeder/master/serverspeeder.sh</div><div class="line">bash serverspeeder.sh</div></pre></td></tr></table></figure></p><p><img src="http://oyy9gorf8.bkt.clouddn.com/linux-image4.PNG" alt=""></p><p>安装成功！</p><p>锐速相关命令：</p><blockquote><p>开始：service serverSpeeder start<br>停止：service serverSpeeder stop<br>重新加载配置：service serverSpeeder reload<br>重启：service serverSpeeder restart<br>状态：service serverSpeeder status<br>统计：service serverSpeeder stats<br>更新许可文件：service serverSpeeder renewLic<br>更新：service serverSpeeder update<br>卸载：service serverSpeeder uninstall</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p id=&quot;div-border-left-yellow&quot;&gt;本篇文章主要是介绍更换内核版本为锐速所支持的版本！&lt;/p&gt;

&lt;p&gt;ubuntu更换内核版本为：linux-image-3.03.-24-generic&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;inline-purple&quot;&gt;
      
    
    </summary>
    
      <category term="实用技术" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="vps" scheme="http://yoursite.com/tags/vps/"/>
    
      <category term="锐速" scheme="http://yoursite.com/tags/%E9%94%90%E9%80%9F/"/>
    
  </entry>
  
</feed>
