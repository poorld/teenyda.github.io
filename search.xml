<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[vps搭建Leanote(蚂蚁笔记)]]></title>
    <url>%2F-%20vps%E6%90%AD%E5%BB%BALeanote(%E8%9A%82%E8%9A%81%E7%AC%94%E8%AE%B0)%2F</url>
    <content type="text"><![CDATA[蚂蚁笔记，有极客范的云笔记！官网：https://leanote.com/ 它最大的特点就是简约、免费、开源、支持 Markdown 语法，支持程序代码高亮、笔记历史记录、支持笔记分享协作、将笔记发布成博客等功能…… 下面是我搭建Leabote的过程！ 1.安装 golang 环境 1wget https://storage.googleapis.com/golang/go1.8.linux-amd64.tar.gz 解压1tar -zxvf go1.8.linux-amd64.tar.gz 创建gopackage文件夹用于存放golang的程序包1mkdir gopackage 添加golang环境变量1vi /etc/profile 在最底下添加代码：123export GOROOT=/root/goexport GOPATH=/root/gopackageexport PATH=$PATH:$GOROOT/bin:$GOPATH/bin 输入命令使环境生效：1source /etc/profile 输入命令检查 golang 是否安装成功：1go version 若安装成功，则会显示 golang 版本号。 2.获取Revel和 Leanote 的源码输入命令下载 revel Web 框架源码12sudo apt-get install git-core mercurial openssh-server openssh-clientgo get github.com/revel/cmd/revel 获取 Leanote 源码上面已经创建了 gopackage 文件夹用于存放程序源码包，因此我们只需要下载好 revel 和 Leanote 服务端的源码包，然后解压放入 gopackage 文件夹即可。 接上面的步骤，当前处于 /root 目录，进入 gopackage 文件夹：1cd gopackage 下载Leanote服务端源码1wget https://github.com/leanote/leanote-all/archive/master.zip 解压:1unzip master.zip 将解压出来的 leanote-all-master 文件夹内的 src 文件夹移到 gopackage 文件夹内：1mv /root/gopackage/master/src /root/gopackage 3.安装 MongoDB 数据库回到 /root 目录：1cd ~ 下载 MongoDB 数据库源码并解压：12wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.1.tgztar -xzvf mongodb-linux-x86_64-3.0.1.tgz 编辑/etc/profile配置文件，添加 MongoDB 数据库的环境变量：1export PATH=$PATH:/root/mongodb-linux-x86_64-3.0.1/bin 路径要正确运行以下命令使环境变量生效:1source /etc/profile 3.1测试Mongodb安装新建一个目录data存放Mongodb数据，（此时路径在/root）:1mkdir data 新建窗口1screen -S mo 启动mongod:1mongod --dbpath /root/data 这时mongod已经启动,Ctrl + a ， 松手， 按键盘 D 键 后台运行 键入mongo进入交互程序：123mongo&gt; show dbs......显示数据库列表 4.导入Leanote初始数据leanote 初始数据在/home/user1/gopackage/src/github.com/leanote/leanote/mongodb_backup/leanote_install_data中。 打开终端， 输入以下命令导入数据。1mongorestore -h localhost -d leanote --dir /root/gopackage/src/github.com/leanote/leanote/mongodb_backup/leanote_install_data 现在在mongodb中已经新建了leanote数据库, 可用命令查看下Leanote有多少张”表”:1234567891011&gt; mongo&gt; show dbsleanote 0.203125GBlocal 0.078125GB&gt; use leanote # 切换到leanoteswitched to db leanote&gt; show collections # 查看表fileshas_share_notesnote_content_historiesnote_contents 5.配置LeanoteLeanote的配置存储在文件 gopackage/src/github.com/leanote/leanote/conf 中。12cd gopackage/src/github.com/leanote/leanote/confvi app.conf 1234567# 访问端口 可以自定义http.port=9000# 访问域名site.url=http://# 管理员用户名（默认用户名admin，密码abc123）# 如果不小心删除数据库的admin用户，下面可以更换管理员账号adminUsername=admin 请务必修改app.secret一项, 在若干个随机位置处，将字符修改成一个其他的值, 否则会有安全隐患! 6.运行Leanote注意: 在此之前请确保Mongodb已在运行! 新开一个窗口1screen -S lea 运行1revel run github.com/leanote/leanote 恭喜你, 打开浏览器输入: http://IP地址:9000 体验Leanote吧 客户端： 网页版： 7.配置https安装nginx1sudo apt-get install nginx 我在leanote的配置（gopackage/src/github.com/leanote/leanote/conf/app.conf）：1234567891011121314151617#------------------------# leanote config#------------------------http.port=9000site.url=http://teenyda.cn # or http://x.com:8080, http://www.xx.com:9000# admin usernameadminUsername=teenyda# mongdbdb.host=127.0.0.1db.port=27017db.dbname=leanote # requireddb.username= # if not exists, please leave it blankdb.password= # if not exists, please leave it blank 我在nginx中的配置：(ubuntu14环境下的 /etc/nginx/sites-available/default)修改前请备份一份原配置文件1234567891011121314151617181920212223242526272829303132333435363738394041424344454647server &#123; listen 80; listen [::]:80 default_server ipv6only=on;# root /usr/share/nginx/html;# index index.html index.htm; # Make site accessible from http://localhost/ server_name teenyda.cn; #强制https，不这样可以注释或者删除 rewrite ^/(.*) https://teenyda.cn/$1 permanent; location / &#123; proxy_pass http://teenyda.cn; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125;&#125;# HTTPS server#server &#123; listen 443; server_name teenyda.cn;## root html;# index index.html index.htm;# ssl on; ssl_certificate /root/teenyda.cn/1_teenyda.cn_bundle.crt; ssl_certificate_key /root/teenyda.cn/2_teenyda.cn.key;## ssl_session_timeout 5m;## ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;# ssl_ciphers &quot;HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES&quot;;# ssl_prefer_server_ciphers on;# location / &#123;# try_files $uri $uri/ =404; proxy_pass http://teenyda.cn:9000; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125;&#125; 它看起来jx就像这样子，并没有http{ }一个大括号包围着 重启一下nginx1service nginx restart 启动mongod命令1mongod --dbpath /root/data 启动leanote命令1revel run github.com/leanote/leanote 参考教程： 晓岛 Github/leanote Github/leanote-QA]]></content>
      <tags>
        <tag>Leanote</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客常用链接]]></title>
    <url>%2F-%20%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[服务类七牛云 七牛云是国内领先的企业级云服务商，专注于以数据管理为中心的云计算业务研发和运营，围绕富媒体场景推出了对象存储、融合 CDN 加速、容器计算云、大数据平台、人工智能平台等产品，并提供一站式视频云解决方案。 algolia Algolia是一个强大的托管搜索引擎API，为产品团队提供了创建快速相关搜索所需的资源和工具。 swiftype 搜索引擎 fontawesome Font Awesome 字体为您提供可缩放矢量图标,它可以被定制大小、颜色、阴影以及任何可以用CSS的样式。支持Markdown! vpsraksmart RakSmart数据中心位于美国加州，中国访问速度快，稳定性好，其冗余性能确保了RakSmart国外服务器正常在线时间和快速的访问。 ping值 hostdare 服务器便宜，最低2.99刀，配置不错，而且还可以微信支付 ping值 somagu 一家韩国的服务器！按小时计费，一个月2.59刀]]></content>
      <categories>
        <category>实用技术</category>
      </categories>
      <tags>
        <tag>链接</tag>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VPS性能测试]]></title>
    <url>%2F-%20vps%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[一、VPS性能测试：CPU物理个数、内核、超线程、多核心1cat /proc/cpuinfo 二、VPS性能测试：内存大小、交换空间、高速缓存、实际使用内存1cat /proc/meminfo 查看占用的内存大小1free -m 计算VPS真实的使用内存方法是：Total-Free-Cached=真实使用内存即： 486-11-214 = 261 表示我的VPS真实使用的内存是261MB 三、VPS性能测试：磁盘IO读写速度、SSD硬盘速度测试12dd if=/dev/zero of=test bs=64k count=4k oflag=dsyncdd if=/dev/zero of=test bs=8k count=256k conv=fdatasync VPS硬盘IO负载测试1top 速度测试1wget https://cachefly.cachefly.net/100mb.test &amp;&amp; rm 100mb.test 测试VPS主机在世界各地的下载速度的一键脚本1wget freevps.us/downloads/bench.sh -O - -o /dev/null | bash 测试VPS主机入口与出口的带宽一键脚本12wget https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.pypython speedtest.py I/O测试1wget -qO- bench.sh | bash 参考链接：免费资源部落]]></content>
      <categories>
        <category>使用技术</category>
      </categories>
      <tags>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL存储过程练习]]></title>
    <url>%2F-%20mysql%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[语法：12CREATE PROCEDURE sp_name([proc_paramenter])[characteristices···]routinue_body sp_name 为存储过程名称；proc_paramenter 为参数列表，参数列表形式如下： [IN|OUT|INOUT]param_name type OUT表示输出参数 INOUT表示既可以输入也可以输出 param_name表示参数名称 type表示参数的类型，可以是MySQL数据库中的任意类型 创建一个学生信息表123456create table info(id int primary key auto_increment,name varchar(20) ,grade int ); 插入几条数据123456insert into info(name,grade) values(&apos;张三&apos;,79);insert into info(name,grade) values(&apos;李四&apos;,65);insert into info(name,grade) values(&apos;王五&apos;,17);insert into info(name,grade) values(&apos;贼六&apos;,99);insert into info(name,grade) values(&apos;鬼脚七&apos;,38);insert into info(name,grade) values(&apos;孙八&apos;,54); 创建一个存储过程，用于统计总分，及格人数和不及格人数1234567891011121314151617181920212223242526272829303132333435delimiter $$#第一个参数为分数条件，第二个参数为总分数，第三个参数为及格人数，第四个为不及格人数create procedure pro_lookup(IN condit int, OUT total_score int, OUT pass_number int, OUT no_pass_number int)begin #添加一个变量，用来保存总学生人数DECLARE stu_count int;#定义变量iDECLARE i int ;#定义成绩变量DECLARE s_grade int;#为三个输出参数初始化SET total_score = 0 ;SET pass_number = 0 ;SET no_pass_number = 0 ;SET i = 1 ;#获取学生个数select COUNT(id) into stu_count from info ;WHILE i &lt;= stu_count DO #为s_grade赋值 select grade into s_grade from info where id = i ; #判断s_grade是否大于某个分数 IF s_grade &gt; condit THEN #及格人数+1 SET pass_number = pass_number + 1; ELSE #否则不及格人数+1 SET no_pass_number = no_pass_number + 1 ; END IF ; #总分数 SET total_score = total_score + s_grade ; SET i = i + 1 ;END WHILE ;end ;$$delimiter ; Loading…调用存储过程语法：1CALL sp_name([parameter[,···]) sp_name为存储过程名称，parameter为存储过程的参数。用 @变量名 来接收传出参数。 12#第一个参数，我把及格分设为70CALL pro_lookup(70,@total,@count_pass,@count_Nopass); 查看结果1select @total,@count_pass,@count_Nopass; 为变量名起别名1select @total as 总分,@count_pass as 及格人数,@count_Nopass as 不及格人数;]]></content>
      <categories>
        <category>代码</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL解决中文乱码问题]]></title>
    <url>%2F-%20mysql%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%2F</url>
    <content type="text"><![CDATA[有时候在表中插入数据要用到中文，但是在插入数据时遇到了下面这种情况（以test表为例）： 查看test表的结构1show create database test; 改变test表的编码方式:1alter database test default character set utf8 collate utf8_bin; 这时候再次插入数据，发现还是不行，查看一下数据库与操作系统编码1show variables like &apos;%char%&apos;; 我们把character_set_client、character_set_connection、character_set_database、character_set_server都设为utf81234set character_set_client=utf8;set character_set_connection=utf8;set character_set_database=utf8;set character_set_server=utf8; 查看编码 如果原来的表不可以插入中文的话，可以重建一张表； 但是还有一个问题没有解决，就是重新打开数据库时，数据库编码又变回来了。 这时，我们要从根本上解决问题–&gt;修改mysql的配置文件 查看mysql默认读取my.cnf的目录1mysql --help | grep my.cnf 输出如下：ubuntu@localhost:/etc/mysql$ mysql –help | grep my.cnf order of preference, my.cnf, $MYSQL_TCP_PORT,/etc/my.cnf /etc/mysql/my.cnf ~/.my.cnf 我们进入到/etc/mysql/目录下，查看my.cnf文件。发现my.cnf的文件是这样的。我们发现，这里面并没有看见相关的配置，瞬间懵逼！因为我们平时看到的是这个样子的 没关系！我们直接修改，插入下面的数据：12345678[mysqld]character-set-server=utf8[client]default-character-set=utf8[mysql]default-character-set=utf8 重启数据库（ubuntu 16）1sudo /etc/init.d/mysql restart ubuntu14执行1service mysql restart 这时候查看编码方式： 大功告成！ 参考：http://blog.csdn.net/u012410733/article/details/61619656]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL相关命令]]></title>
    <url>%2F-%20mysql%2F</url>
    <content type="text"><![CDATA[SQL语句通常可分为如下几种类型。查询语句： 主要由selsct关键字完成，查询语句是SQL语句中最复杂、功能最丰富的语句。DML语句（数据操作语言）： 主要由insert、update和delete三个关键字完成。DDL语句（数据定义语言）： 主要由create、alter、drop和truncate四个关键字完成。DCL语句（数据控制语言）： 主要由grant和revoke两个关键字完成。事务控制语句： 主要由commit、rollback和savepoint三个关键字完成。 MySQL相关命令1.登录命令1mysql -u username -p 2.创建用户1create user &apos;用户名&apos;@&apos;localhost&apos; identified by &apos;密码&apos; 2.1 赋权限1grant all privileges on &apos;数据库名&apos;.* to &apos;用户名&apos;@&apos;localhost&apos; 3.查看数据库的信息1show create database 库名 4.修改数据库编码1alter database 库名 default character SET 编码方式 collate 编码方式_bin 5.删除数据库1drop database 数据库名 6.查看表结构(表的字段信息)1desc 表名 7.修改表名1alter table 旧表名 rename to 新表名 8.修改字段名1alter table 表名 change 旧字段 新字段 新数据类型 9.修改字段类型1alter table 表名 modify 字段名 数据类型 10.添加字段1alter table 表名 add 新字段名 数据类型 [约束条件][FIRST|AFLTER 已存在字段名] 例如1alter table test my_db add age INT 11.删除字段1alter table 表名 drop 字段名 12.删除表名1drop table 表名 13.删除表中所有记录123delect from 表名或者truncate [TABLE] 表名]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[服务器用sendgrid发邮件]]></title>
    <url>%2Fsendgrid%E9%82%AE%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[注册地址：sendgrid 进入仪表盘，点击Setup Guide 把API key复制下来 官方python教程地址Github按照官方教程，我们测试发送一封邮件！ YOUR_API_KEY 就是刚才的api key123echo &quot;export SENDGRID_API_KEY=&apos;YOUR_API_KEY&apos;&quot; &gt; sendgrid.envecho &quot;sendgrid.env&quot; &gt;&gt; .gitignoresource ./sendgrid.env 安装Sendgrid12sudo apt-get python-pipsudo pip install sendgrid 新建一个文件，比如test.py1sudo vi test.py 官方给出的演示如下 我们把它复制到test.py1234567891011121314import sendgridimport osfrom sendgrid.helpers.mail import *sg = sendgrid.SendGridAPIClient(apikey=os.environ.get(&apos;SENDGRID_API_KEY&apos;))from_email = Email(&quot;test@example.com&quot;)to_email = Email(&quot;test@example.com&quot;)subject = &quot;Sending with SendGrid is Fun&quot;content = Content(&quot;text/plain&quot;, &quot;and easy to do anywhere, even with Python&quot;)mail = Mail(from_email, subject, to_email, content)response = sg.client.mail.send.post(request_body=mail.get())print(response.status_code)print(response.body)print(response.headers) 最后 python test.py 发送成功！ 为了防止邮箱被轰炸，所以涂鸦了-_-]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>邮件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ububtu更换内核（安装锐速）]]></title>
    <url>%2Fubuntu%E6%9B%B4%E6%8D%A2%E5%86%85%E6%A0%B8%2F</url>
    <content type="text"><![CDATA[本篇文章主要是介绍更换内核版本为锐速所支持的版本！ ubuntu更换内核版本为：linux-image-3.03.-24-generic 首先保证你的服务器是64位系统，锐速不支持任何ubuntu14.04的32位系统 1.安装3.13.0-24-generic内核1sudo apt-get install linux-image-extra-3.13.0-24-generic 2.查看当前安装的内核：1dpkg -l | grep linux-image 3.除了3.13.0-24-generic的内核，我们把他们卸载掉12sudo apt-get purge linux-image-3.13.0-121-generic linux-image-3.13.0-128-generic(多个内核用空格隔开)... 可以看到，最后只剩下我们所要的内核 4.更新grub系统引导文件：1sudo update-grub 5.重启1sudo reboot 6.重启之后可以看到，我们用的是3.13.0-24-generic1uname -r 7.安装锐速破解版：12wget -N --no-check-certificate https://raw.githubusercontent.com/wn789/serverspeeder/master/serverspeeder.shbash serverspeeder.sh 安装成功！ 锐速相关命令： 开始：service serverSpeeder start停止：service serverSpeeder stop重新加载配置：service serverSpeeder reload重启：service serverSpeeder restart状态：service serverSpeeder status统计：service serverSpeeder stats更新许可文件：service serverSpeeder renewLic更新：service serverSpeeder update卸载：service serverSpeeder uninstall]]></content>
      <categories>
        <category>实用技术</category>
      </categories>
      <tags>
        <tag>vps</tag>
        <tag>锐速</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（笑话）将错就错]]></title>
    <url>%2F-%20%E7%AC%91%E8%AF%9D%2F</url>
    <content type="text"><![CDATA[一日午夜，睡梦中突然————“铃~ ~铃” 电话暴响。“谁这么晚还打电话？”揉揉惺忪睡眼，黑暗中，我摸起电话。“喂，谁呀？”“大舅，是我。”“哦，是你呀，外甥。”“大舅，你身体还好吗？”“挺好的。”“我舅妈身体好吗？”“都挺好的。”“咦？大舅，你的声音怎么变了？”“因为你打错电话了，外甥。”对方愣了5秒，然后电话中传来“嘟~ 嘟 ~” 的忙音。]]></content>
      <tags>
        <tag>笑话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《目送》——忧郁]]></title>
    <url>%2F%E5%BF%A7%E9%83%81%2F</url>
    <content type="text"><![CDATA[我冲到阳台，凝神看海面，希望看见那“状如雀鹞，而色惨黑”的苦主。可是海上一片风云动摇，光影迷离，任我怎么定情专注，都看不见杜鹃的踪迹。]]></content>
      <tags>
        <tag>文摘</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建flarum论坛]]></title>
    <url>%2F%E6%90%AD%E5%BB%BAflarum%E8%AE%BA%E5%9D%9B%2F</url>
    <content type="text"><![CDATA[本篇文章将介绍如何安装Flarum论坛。我的环境：Ubuntu 16.04.2 x64php7 依次安装apache2、php、mysql-server、php-mysql 1234sudo apt-get install apache2sudo apt-get install php(ubunut14用apt-get install php5)sudo apt-get install mysql-serversudo apt-get install php-mysql(ubunut14用php5-mysql) 下载Flarum中文版1wget http://oyy9gorf8.bkt.clouddn.com/Flarum.zip 安装unzip1sudo apt-get install unzip 将Flarum解压1sudo unzip Flarum.zip 将Flarum文件夹移动到/var/www下面1sudo mv Flarum /var/www 添加权限1sudo chmod -R 777 /var/www/Flarum 开启rewrite12cd /etc/apache2/mods-enabledsudo ln -s ../mods-available/rewrite.load 重定向1sudo vi /etc/apache2/sites-available/000-default.conf 找到DocumentRoot /var/www/html 其中/var/www/html 就是你的网站根目录 把/var/www/html 改为 /var/www/Flarum 并在该文件中的VirtualHost节点之间添加如下代码:123&lt;Directory /var/www/Flarum&gt;AllowOverride All&lt;/Directory&gt; 编辑apache21vi /etc/apache2/apache2.conf 找到12345&lt;Directory /&gt;Options FollowSymLinksAllowOverride NoneRequire all denied&lt;/Directory&gt; 将将AllowOverride None改为AllowOverride All ，Require all denied改为Require all granted. ###创建数据库1mysql -u root -p 输入密码，然后创建一个名为Flarum的数据库1create database Flarum; 输入exit退出数据库 重启apache212sudo service /etc/init.d/apache2 restartubuntu14执行：service apache2 restart 如果在重启apache2出现以下错误1234567 sudo service apache2 restart * Restarting web server apache2 [fail] * The apache2 configtest failed.Output of config test was:apache2: Syntax error on line 140 of /etc/apache2/apache2.conf: Could not open configuration file /etc/apache2/mods-enabled/rewrite.load: No such file or directoryAction &apos;configtest&apos; failed.The Apache error log may have more information. 执行加载Rewrite模块：1a2enmod rewrite 在浏览器输入IP地址，可以看到，遇到了三个问题 解决办法： 第一个问题1sudo apt-get install php-xml 第二个问题1sudo apt-get install php-gd 第三个问题1sudo apt-get install php-mbstring 有的是只有第二个问题The PHP extension ‘gd’ is required.则输入1sudo apt-get install php-gd ubuntu14则执行1sudo apt-get install php5-gd 重启apache1sudo service /etc/init.d/apache2 restart 打开浏览器输入ip地址就能正常安装啦 如果要绑定域名，要修改Flarum目录下的config.php1sudo vi /var/www/Flarum/config.php 找到 ‘url’ =&gt; ‘http://？？？？？‘ 改成1&apos;url&apos; =&gt; &apos;//&apos; . $_SERVER[&apos;HTTP_HOST&apos;], 执行命令php flarum cache:clear &amp;&amp; rm -f assets/rev-manifest.json 主机优惠链接]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>论坛</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vps常用命令]]></title>
    <url>%2F-%20vps%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[#锐速3.10.61.0版命令 启动：service serverSpeeder start停止: service serverSpeeder stop重新加载配置: service serverSpeeder reload重启: service serverSpeeder restart状态: service serverSpeeder status统计: service serverSpeeder stats卸载: chattr -i /serverspeeder/etc/apx* &amp;&amp; /serverspeeder/bin/serverSpeeder.sh unstall -f]]></content>
      <categories>
        <category>实用技术</category>
      </categories>
      <tags>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客常用链接]]></title>
    <url>%2F-%20vps%2F</url>
    <content type="text"><![CDATA[服务类七牛云 七牛云是国内领先的企业级云服务商，专注于以数据管理为中心的云计算业务研发和运营，围绕富媒体场景推出了对象存储、融合 CDN 加速、容器计算云、大数据平台、人工智能平台等产品，并提供一站式视频云解决方案。 algolia Algolia是一个强大的托管搜索引擎API，为产品团队提供了创建快速相关搜索所需的资源和工具。 swiftype 搜索引擎 fontawesome fontawesome中文网 Font Awesome 字体为您提供可缩放矢量图标,它可以被定制大小、颜色、阴影以及任何可以用CSS的样式。支持Markdown! vpsraksmart RakSmart数据中心位于美国加州，中国访问速度快，稳定性好，其冗余性能确保了RakSmart国外服务器正常在线时间和快速的访问。 ping值 hostdare 服务器便宜，最低2.99刀，配置不错，而且还可以微信支付 ping值 somagu 一家韩国的服务器！按小时计费，一个月2.59刀]]></content>
      <categories>
        <category>实用技术</category>
      </categories>
      <tags>
        <tag>链接</tag>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[测试]]></title>
    <url>%2Fvpn%2F</url>
    <content type="text"><![CDATA[这是一篇测试文章代码演示 1234567@requires_authorizationclass SomeClass: passif __name__ == '__main__': # A comment print 'hello world' 这是一个访问记录地球仪Loading… 下面是各个配置代码 下载1&lt;a id=&quot;download&quot; href=&quot;http://oyy9gorf8.bkt.clouddn.com/about_1.jpeg&quot;&gt;下载&lt;/a&gt; 颜色块-蓝1&lt;span id=&quot;inline-blue&quot;&gt;颜色块-蓝&lt;/span&gt; 颜色块-紫1&lt;span id=&quot;inline-purple&quot;&gt;颜色块-紫&lt;/span&gt; 左侧边框黄色块级1&lt;p id=&quot;div-border-left-yellow&quot;&gt;左侧边框黄色块级&lt;/p&gt; 左侧边框绿色块级1&lt;p id=&quot;div-border-left-green&quot;&gt;左侧边框绿色块级&lt;/p&gt; 左侧边框蓝色块级1&lt;p id=&quot;div-border-left-blue&quot;&gt;左侧边框蓝色块级&lt;/p&gt; 左侧边框紫色块级1&lt;p id=&quot;div-border-left-purple&quot;&gt;左侧边框紫色块级&lt;/p&gt; 右侧边框红色块级1&lt;p id=&quot;div-border-right-red&quot;&gt;右侧边框红色块级&lt;/p&gt; 右侧边框黄色块级1&lt;p id=&quot;div-border-right-yellow&quot;&gt;右侧边框黄色块级&lt;/p&gt; 右侧边框绿色块级1&lt;p id=&quot;div-border-right-green&quot;&gt;右侧边框绿色块级&lt;/p&gt; 右侧边框蓝色块级1&lt;p id=&quot;div-border-right-blue&quot;&gt;右侧边框蓝色块级&lt;/p&gt; 右侧边框紫色块级1&lt;p id=&quot;div-border-right-purple&quot;&gt;右侧边框紫色块级&lt;/p&gt; 上侧边框红色1&lt;p id=&quot;div-border-top-red&quot;&gt;上侧边框红色&lt;/p&gt; 上侧边框黄色1&lt;p id=&quot;div-border-top-yellow&quot;&gt;上侧边框黄色&lt;/p&gt; 上侧边框绿色1&lt;p id=&quot;div-border-top-green&quot;&gt;上侧边框绿色&lt;/p&gt; 上侧边框蓝色1&lt;p id=&quot;div-border-top-blue&quot;&gt;上侧边框蓝色&lt;/p&gt; 上侧边框紫色1&lt;p id=&quot;div-border-top-purple&quot;&gt;上侧边框紫色&lt;/p&gt;]]></content>
  </entry>
</search>
